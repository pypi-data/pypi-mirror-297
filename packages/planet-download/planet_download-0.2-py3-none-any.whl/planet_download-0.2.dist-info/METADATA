Metadata-Version: 2.1
Name: planet-download
Version: 0.2
Summary: A package for acquiring and processing Planet images
Author: Raj Neupane
Author-email: ruinner17@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: affine==2.4.0
Requires-Dist: attrs==24.2.0
Requires-Dist: certifi==2024.8.30
Requires-Dist: charset-normalizer==3.3.2
Requires-Dist: click==8.1.7
Requires-Dist: click-plugins==1.1.1
Requires-Dist: cligj==0.7.2
Requires-Dist: docutils==0.21.2
Requires-Dist: geopandas==1.0.1
Requires-Dist: glob2==0.7
Requires-Dist: idna==3.8
Requires-Dist: importlib-metadata==8.5.0
Requires-Dist: jaraco.classes==3.4.0
Requires-Dist: jaraco.context==6.0.1
Requires-Dist: jaraco.functools==4.0.2
Requires-Dist: keyring==25.3.0
Requires-Dist: markdown-it-py==3.0.0
Requires-Dist: mdurl==0.1.2
Requires-Dist: more-itertools==10.5.0
Requires-Dist: nh3==0.2.18
Requires-Dist: numpy==2.1.1
Requires-Dist: packaging==24.1
Requires-Dist: pandas==2.2.2
Requires-Dist: pkginfo==1.10.0
Requires-Dist: Pygments==2.18.0
Requires-Dist: pyogrio==0.9.0
Requires-Dist: pyparsing==3.1.4
Requires-Dist: pyproj==3.6.1
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: pytz==2024.2
Requires-Dist: rasterio==1.3.11
Requires-Dist: readme-renderer==44.0
Requires-Dist: requests==2.32.3
Requires-Dist: requests-toolbelt==1.0.0
Requires-Dist: rfc3986==2.0.0
Requires-Dist: rich==13.8.1
Requires-Dist: setuptools==74.1.2
Requires-Dist: shapely==2.0.6
Requires-Dist: six==1.16.0
Requires-Dist: snuggs==1.4.7
Requires-Dist: twine==5.1.1
Requires-Dist: tzdata==2024.1
Requires-Dist: urllib3==2.2.3
Requires-Dist: wheel==0.44.0
Requires-Dist: zipp==3.20.1

# Planet Image Download Using Planet API
This Github repository helps to dowload the planet scope image using the api provided by planet scope.

### How to use this package
Clone this repository and use it like example below:
We need three things to use the package:
1. Spatial extent or bounding box
2. Dates (dates is in list, we provide base year and target year )
3. Planet Api Key

```python
from planet_image_acquisition.planet_image_acquisition import get_planet_image
spatial_extent = (120.527,16.342,120.652,16.464) # xmin,ymin,xmax,ymax
dates = [2018,2019] # Should be provided in list format
api = '' # Provide the planet api key for your account

base,target=get_planet_image(spatial_extent,dates,api)
```

### Temporal Resolution for Planet Scope Image
We can download planet scope image from the year 2018. For the year 2018 and 2019, we can only download 6 months composite.
For 2020 we can download planet image of 6 monthe composite (2019-12_2020-05), 2 months composite (2020-06_2020-08),and all
other from this point is a one month composite

Years and Image composite for the respective year is given as below. One should provide dates like below inorder to download
planet image. I this package we only provide the year other logic is handled in date_logic python file.


| **Year**   | **Image Composite**      |
| --- | --- |
| 2018   | 2017-12_2018-05, 2018-06_2018-11 |
| 2019   | 2018-12_2019-05, 2019-06_2019-11 |
| 2020   | 2019-12_2020-05, 2020-06_2020-08, 2020-09, 2020-10, 2020-11, 2020-12 |
| 2021   | 2021-01, 2021-02, 2021-03, .... , 2021-12 |
| 2022   | 2022-01, 2022-02, 2022-03, .... , 2022-12 |
| 2023   | 2023-01, 2023-02, 2023-03, .... , 2023-12 |
| 2024   | 2024-01, 2024-02, 2024-03, .... , 2024-12 |


