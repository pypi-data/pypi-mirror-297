"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing
import datasphere.yandex.cloud.priv.ai.platform.v1.workload_pb2
import datasphere.yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PoolType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PoolTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PoolType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNDEFINED: _PoolType.ValueType  # 0
    SITE: _PoolType.ValueType  # 1
    SERVANT_CPU: _PoolType.ValueType  # 2
    SERVANT_GPU: _PoolType.ValueType  # 3
    ROOM: _PoolType.ValueType  # 4
    ROOM_HEADLESS: _PoolType.ValueType  # 5
    JUPYTER_LAB: _PoolType.ValueType  # 6

class PoolType(_PoolType, metaclass=_PoolTypeEnumTypeWrapper): ...

UNDEFINED: PoolType.ValueType  # 0
SITE: PoolType.ValueType  # 1
SERVANT_CPU: PoolType.ValueType  # 2
SERVANT_GPU: PoolType.ValueType  # 3
ROOM: PoolType.ValueType  # 4
ROOM_HEADLESS: PoolType.ValueType  # 5
JUPYTER_LAB: PoolType.ValueType  # 6
global___PoolType = PoolType

@typing.final
class CreatePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: global___PoolType.ValueType
    @property
    def request(self) -> yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.CreatePoolRequest: ...
    def __init__(
        self,
        *,
        request: yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.CreatePoolRequest | None = ...,
        type: global___PoolType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["request", b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["request", b"request", "type", b"type"]) -> None: ...

global___CreatePoolRequest = CreatePoolRequest

@typing.final
class UpdatePoolsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKLOADS_FIELD_NUMBER: builtins.int
    COMPUTE_IMAGES_FIELD_NUMBER: builtins.int
    @property
    def workloads(self) -> global___Workloads: ...
    @property
    def compute_images(self) -> global___ComputeImages: ...
    def __init__(
        self,
        *,
        workloads: global___Workloads | None = ...,
        compute_images: global___ComputeImages | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["compute_images", b"compute_images", "workloads", b"workloads"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["compute_images", b"compute_images", "workloads", b"workloads"]) -> None: ...

global___UpdatePoolsRequest = UpdatePoolsRequest

@typing.final
class Workloads(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SITE_WORKLOAD_FIELD_NUMBER: builtins.int
    SERVANT_WORKLOAD_FIELD_NUMBER: builtins.int
    ROOM_DEDICATED_WORKLOAD_FIELD_NUMBER: builtins.int
    ROOM_HEADLESS_WORKLOAD_FIELD_NUMBER: builtins.int
    JUPYTER_LAB_WORKLOAD_FIELD_NUMBER: builtins.int
    @property
    def site_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def servant_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def room_dedicated_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def room_headless_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def jupyter_lab_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    def __init__(
        self,
        *,
        site_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        servant_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        room_dedicated_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        room_headless_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        jupyter_lab_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["jupyter_lab_workload", b"jupyter_lab_workload", "room_dedicated_workload", b"room_dedicated_workload", "room_headless_workload", b"room_headless_workload", "servant_workload", b"servant_workload", "site_workload", b"site_workload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["jupyter_lab_workload", b"jupyter_lab_workload", "room_dedicated_workload", b"room_dedicated_workload", "room_headless_workload", b"room_headless_workload", "servant_workload", b"servant_workload", "site_workload", b"site_workload"]) -> None: ...

global___Workloads = Workloads

@typing.final
class ComputeImages(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SITE_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    CPU_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    GPU_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    ROOM_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    JUPYTERLAB_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    site_compute_image: builtins.str
    cpu_compute_image: builtins.str
    gpu_compute_image: builtins.str
    room_compute_image: builtins.str
    jupyterlab_compute_image: builtins.str
    def __init__(
        self,
        *,
        site_compute_image: builtins.str = ...,
        cpu_compute_image: builtins.str = ...,
        gpu_compute_image: builtins.str = ...,
        room_compute_image: builtins.str = ...,
        jupyterlab_compute_image: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cpu_compute_image", b"cpu_compute_image", "gpu_compute_image", b"gpu_compute_image", "jupyterlab_compute_image", b"jupyterlab_compute_image", "room_compute_image", b"room_compute_image", "site_compute_image", b"site_compute_image"]) -> None: ...

global___ComputeImages = ComputeImages
