[metadata]
name = pyobo
version = 0.10.12
description = Handling and writing OBO
long_description = file: README.rst
url = https://github.com/pyobo/pyobo
download_url = https://github.com/pyobo/pyobo/releases
project_urls = 
	Bug Tracker = https://github.com/pyobo/pyobo/issues
	Source Code = https://github.com/pyobo/pyobo
author = Charles Tapley Hoyt
author_email = cthoyt@gmail.com
maintainer = Charles Tapley Hoyt
maintainer_email = cthoyt@gmail.com
license = MIT
license_files = LICENSE
classifiers = 
	Development Status :: 4 - Beta
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3.12
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3 :: Only
	Topic :: Scientific/Engineering :: Bio-Informatics
	Topic :: Scientific/Engineering :: Chemistry
keywords = 
	Open Biomedical Ontologies
	OBO

[options]
install_requires = 
	obonet>=0.3.0
	click
	tqdm
	pyyaml
	pandas
	requests
	protmapper
	more_itertools
	more_click>=0.0.2
	humanize
	tabulate
	cachier
	pystow>=0.2.7
	bioversions>=0.5.202
	bioregistry>=0.10.20
	bioontologies>=0.4.0
	zenodo-client>=0.0.5
	class_resolver
	psycopg2-binary
	drugbank_downloader
	chembl_downloader
	umls_downloader>=0.1.3
	typing_extensions
zip_safe = false
include_package_data = True
python_requires = >=3.9
packages = find:
package_dir = 
	= src

[options.packages.find]
where = src

[options.extras_require]
tests = 
	coverage
	pytest
docs = 
	sphinx<8.0
	sphinx-rtd-theme
	sphinx-click
	sphinx_automodapi
web = 
	flask
	bootstrap-flask
	flask-admin
	flasgger
	psutil
agrovoc = 
	rdflib

[options.entry_points]
console_scripts = 
	pyobo = pyobo.cli:main
	recurify = pyobo.cli:recurify
pyobo.xrefs = 
	cbms2019 = pyobo.xrefdb.sources.cbms2019:get_cbms2019_xrefs_df
	chembl   = pyobo.xrefdb.sources.chembl:get_chembl_xrefs_df
	compath  = pyobo.xrefdb.sources.compath:get_compath_xrefs_df
	famplex  = pyobo.xrefdb.sources.famplex:get_famplex_xrefs_df
	gilda    = pyobo.xrefdb.sources.gilda:get_gilda_xrefs_df
	intact   = pyobo.xrefdb.sources.intact:get_xrefs_df
	ncit     = pyobo.xrefdb.sources.ncit:get_ncit_xrefs_df
	pubchem  = pyobo.xrefdb.sources.pubchem:get_pubchem_mesh_df
	wikidata = pyobo.xrefdb.sources.wikidata:get_wikidata_xrefs_df
	biomappings = pyobo.xrefdb.sources.biomappings:get_biomappings_df

[doc8]
max-line-length = 120

[coverage:run]
branch = True
source = pyobo
omit = 
	tests/*
	docs/*

[coverage:paths]
source = 
	src/pyobo
	.tox/*/lib/python*/site-packages/pyobo

[coverage:report]
show_missing = True
exclude_lines = 
	def __str__
	def __repr__

[darglint]
docstring_style = sphinx
strictness = short

[flake8]
ignore = 
	S310
	W503
	S405
	S314
	E203
	S301
	S403
	C901
exclude = 
	.tox,
	.git,
	__pycache__,
	docs/source/conf.py,
	build,
	dist,
	tests/fixtures/*,
	*.pyc,
	*.egg-info,
	.cache,
	.eggs
max-complexity = 25
max-line-length = 120
import-order-style = pycharm
application-import-names = 
	pyobo
	tests

[egg_info]
tag_build = 
tag_date = 0

