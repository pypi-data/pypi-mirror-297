[tool.poetry]
name = "llm-context"
version = "0.0.13"
description = "A command-line tool for copying code context to clipboard for use in LLM chats"
authors = ["restlessronin <88921269+restlessronin@users.noreply.github.com>"]
readme = "README.md"
packages = [{ include = "llm_context", from = "src" }]
include = ["src/llm_context/templates/*.j2"]
repository = "https://github.com/cyberchitta/llm-context.py"
license = "Apache-2.0"
keywords = ["llm", "ai", "context", "code", "clipboard", "chat"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Utilities",
  "Topic :: Communications :: Chat",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.9"
jinja2 = "^3.1.4"
packaging = "^24.1"
pathspec = "^0.12.1"
pyperclip = "^1.9.0"
toml = "^0.10.2"
tree-sitter = "0.21.3"
tree-sitter-languages = "^1.10.2"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
git-cliff = "^2.5.0"
isort = "^5.13.2"
mypy = "^1.11.2"
pytest = "^8.3.2"
ruff = "^0.6.5"
taplo = "^0.9.3"

[tool.poetry.scripts]
lc-context = "llm_context.context_generator:context"
# lc-dirtree = "llm_context.folder_structure_diagram:main"
lc-read-cliplist = "llm_context.context_generator:files_from_clip"
lc-sel-files = "llm_context.file_selector:select_full_files"
lc-sel-outlines = "llm_context.file_selector:select_outline_files"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
filterwarnings = ["ignore::FutureWarning"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E203", "E266", "E501", "F403", "F401"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
