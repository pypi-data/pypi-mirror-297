
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_SMA.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_SMA.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_SMA.py:


Moving Average Crossing
=======================

.. GENERATED FROM PYTHON SOURCE LINES 5-49

.. code-block:: python3


    # Import necessary modules and classes from the TradeTide package
    from TradeTide import BackTester, indicators, get_market_data
    from TradeTide import capital_management, risk_management

    # Load historical market data for EUR/USD pair for the year 2023 and limit to 4000 data points
    market_data = get_market_data('eur', 'usd', year=2023, time_span='3day', spread=0)

    # Initialize a Moving Average Crossing indicator with specific window settings and minimum period
    indicator = indicators.MAC(
        long_window=150,  # Long moving average window
        short_window=30,  # Short moving average window
        min_period=10  # Minimum period required to start generating signals
    )

    # Generate trading signals based on the market data
    indicator.generate_signal(market_data)

    # Plot the indicator signals overlaid on the market data
    indicator.plot()

    # Create the BackTester instance, linking it with the market data and chosen strategy
    backtester = BackTester(market=market_data, strategy=indicator)

    # Set up loss and profit management with specified stop loss and take profit percentages
    risk = risk_management.DirectLossProfit(
        market=market_data,
        stop_loss='10pip',
        take_profit='10pip',
    )

    # Configure capital management strategy with initial capital, spread, and trading constraints
    capital_management = capital_management.LimitedCapital(
        initial_capital=100_000,
        risk_management=risk,
        max_cap_per_trade=10_000,
        limit_of_positions=1,
        micro_lot=1_000
    )

    # Execute the backtest using the configured capital management strategy
    backtester.backtest(capital_management=capital_management)





.. image-sg:: /gallery/images/sphx_glr_plot_SMA_001.png
   :alt: plot SMA
   :srcset: /gallery/images/sphx_glr_plot_SMA_001.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>date</th>
          <th>units</th>
          <th>holdings</th>
          <th>short_positions</th>
          <th>long_positions</th>
          <th>cash</th>
          <th>total</th>
          <th>returns</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2023-08-04 08:13:00+00:00</td>
          <td>0.0</td>
          <td>0.00000</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>100000.00000</td>
          <td>100000.00000</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2023-08-04 08:14:00+00:00</td>
          <td>9133.0</td>
          <td>10000.36101</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>90000.82628</td>
          <td>100001.18729</td>
          <td>0.000012</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2023-08-04 08:15:00+00:00</td>
          <td>9133.0</td>
          <td>9999.63037</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>90000.82628</td>
          <td>100000.45665</td>
          <td>-0.000007</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2023-08-04 08:16:00+00:00</td>
          <td>9133.0</td>
          <td>9999.81303</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>90000.82628</td>
          <td>100000.63931</td>
          <td>0.000002</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2023-08-04 08:17:00+00:00</td>
          <td>9133.0</td>
          <td>10000.08702</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>90000.82628</td>
          <td>100000.91330</td>
          <td>0.000003</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>1430</th>
          <td>2023-08-07 08:08:00+00:00</td>
          <td>9096.0</td>
          <td>9993.04752</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>90037.52708</td>
          <td>100030.57460</td>
          <td>0.000004</td>
        </tr>
        <tr>
          <th>1431</th>
          <td>2023-08-07 08:09:00+00:00</td>
          <td>9096.0</td>
          <td>9994.23000</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>90037.52708</td>
          <td>100031.75708</td>
          <td>0.000012</td>
        </tr>
        <tr>
          <th>1432</th>
          <td>2023-08-07 08:10:00+00:00</td>
          <td>9096.0</td>
          <td>9994.23000</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>90037.52708</td>
          <td>100031.75708</td>
          <td>0.000000</td>
        </tr>
        <tr>
          <th>1433</th>
          <td>2023-08-07 08:11:00+00:00</td>
          <td>9096.0</td>
          <td>9993.32040</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>90037.52708</td>
          <td>100030.84748</td>
          <td>-0.000009</td>
        </tr>
        <tr>
          <th>1434</th>
          <td>2023-08-07 08:12:00+00:00</td>
          <td>9096.0</td>
          <td>9992.41080</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>90037.52708</td>
          <td>100029.93788</td>
          <td>-0.000009</td>
        </tr>
      </tbody>
    </table>
    <p>1435 rows Ã— 8 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Visualize the backtest results, showing the strategy's performance against the market price

.. GENERATED FROM PYTHON SOURCE LINES 51-56

.. code-block:: python3

    backtester.plot(show_price=True)

    # Calculate and display key performance metrics for the trading strategy
    metrics = backtester.metrics




.. image-sg:: /gallery/images/sphx_glr_plot_SMA_002.png
   :alt: Trading Strategy Overview
   :srcset: /gallery/images/sphx_glr_plot_SMA_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 57-58

Retrieve and print the final total value of the portfolio after completing the backtest

.. GENERATED FROM PYTHON SOURCE LINES 58-62

.. code-block:: python3

    metrics.print()


    # -




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Property              value
    --------------------  -------------------------
    Start Date            2023-08-04 08:13:00+00:00
    Stop Date             2023-08-07 08:12:00+00:00
    Duration              2 days 23:59:00
    Reward-Risk ratio     1.0
    Returns               0.03%
    Returns [annualized]  11.55%
    Maximum drawdown      -0.06%
    Sharpe Ratio          0.23
    Sortino Ratio         540.41
    Number of Trades      25
    Win-Loss Ratio        1.50
    Equity                $100,029.94
    Volatility            0.02%





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.563 seconds)


.. _sphx_glr_download_gallery_plot_SMA.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_SMA.py <plot_SMA.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_SMA.ipynb <plot_SMA.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
