# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import protos.user.user_pb2 as user__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/UserService/Register',
                request_serializer=user__pb2.RegisterUserRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.ChangePassword = channel.unary_unary(
                '/UserService/ChangePassword',
                request_serializer=user__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.CompanyVerification = channel.unary_unary(
                '/UserService/CompanyVerification',
                request_serializer=user__pb2.CompanyVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.PersonVerification = channel.unary_unary(
                '/UserService/PersonVerification',
                request_serializer=user__pb2.PersonVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.PartnersVerification = channel.unary_unary(
                '/UserService/PartnersVerification',
                request_serializer=user__pb2.PartnersVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.CompleteVerification = channel.unary_unary(
                '/UserService/CompleteVerification',
                request_serializer=user__pb2.CompleteVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.DocumentsVerification = channel.unary_unary(
                '/UserService/DocumentsVerification',
                request_serializer=user__pb2.DocumentsVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.SetLegalType = channel.unary_unary(
                '/UserService/SetLegalType',
                request_serializer=user__pb2.SetLegalTypeRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.MatiSent = channel.unary_unary(
                '/UserService/MatiSent',
                request_serializer=user__pb2.MatiSentRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.UserProfile = channel.unary_unary(
                '/UserService/UserProfile',
                request_serializer=user__pb2.UserProfileRequest.SerializeToString,
                response_deserializer=user__pb2.UserProfileResponse.FromString,
                _registered_method=True)
        self.WebhookMatiVerification = channel.unary_unary(
                '/UserService/WebhookMatiVerification',
                request_serializer=user__pb2.WebhookMatiVerificationRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.PartnerDelete = channel.unary_unary(
                '/UserService/PartnerDelete',
                request_serializer=user__pb2.PartnerDeleteRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)
        self.PartnerNext = channel.unary_unary(
                '/UserService/PartnerNext',
                request_serializer=user__pb2.CommonRequest.SerializeToString,
                response_deserializer=user__pb2.CommonResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompanyVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PersonVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PartnersVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DocumentsVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLegalType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MatiSent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WebhookMatiVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PartnerDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PartnerNext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=user__pb2.RegisterUserRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=user__pb2.ChangePasswordRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'CompanyVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CompanyVerification,
                    request_deserializer=user__pb2.CompanyVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'PersonVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.PersonVerification,
                    request_deserializer=user__pb2.PersonVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'PartnersVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.PartnersVerification,
                    request_deserializer=user__pb2.PartnersVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'CompleteVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteVerification,
                    request_deserializer=user__pb2.CompleteVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'DocumentsVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.DocumentsVerification,
                    request_deserializer=user__pb2.DocumentsVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'SetLegalType': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLegalType,
                    request_deserializer=user__pb2.SetLegalTypeRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'MatiSent': grpc.unary_unary_rpc_method_handler(
                    servicer.MatiSent,
                    request_deserializer=user__pb2.MatiSentRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'UserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UserProfile,
                    request_deserializer=user__pb2.UserProfileRequest.FromString,
                    response_serializer=user__pb2.UserProfileResponse.SerializeToString,
            ),
            'WebhookMatiVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.WebhookMatiVerification,
                    request_deserializer=user__pb2.WebhookMatiVerificationRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'PartnerDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.PartnerDelete,
                    request_deserializer=user__pb2.PartnerDeleteRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
            'PartnerNext': grpc.unary_unary_rpc_method_handler(
                    servicer.PartnerNext,
                    request_deserializer=user__pb2.CommonRequest.FromString,
                    response_serializer=user__pb2.CommonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/Register',
            user__pb2.RegisterUserRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/ChangePassword',
            user__pb2.ChangePasswordRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompanyVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/CompanyVerification',
            user__pb2.CompanyVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PersonVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/PersonVerification',
            user__pb2.PersonVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PartnersVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/PartnersVerification',
            user__pb2.PartnersVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompleteVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/CompleteVerification',
            user__pb2.CompleteVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DocumentsVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/DocumentsVerification',
            user__pb2.DocumentsVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLegalType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/SetLegalType',
            user__pb2.SetLegalTypeRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MatiSent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/MatiSent',
            user__pb2.MatiSentRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/UserProfile',
            user__pb2.UserProfileRequest.SerializeToString,
            user__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WebhookMatiVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/WebhookMatiVerification',
            user__pb2.WebhookMatiVerificationRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PartnerDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/PartnerDelete',
            user__pb2.PartnerDeleteRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PartnerNext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/UserService/PartnerNext',
            user__pb2.CommonRequest.SerializeToString,
            user__pb2.CommonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
