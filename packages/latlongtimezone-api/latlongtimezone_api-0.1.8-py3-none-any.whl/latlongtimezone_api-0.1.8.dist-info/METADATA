Metadata-Version: 2.1
Name: latlongtimezone_api
Version: 0.1.8
Summary: An API wrapper for Scrappey.com written in Python (cloudflare bypass & solver)
Home-page: https://github.com/pim97/requests-lat-long-timezone-locale-ip-api
Author: dormic97
Author-email: crozz-boy@hotmail.com
License: MIT
Keywords: ip,ip-api,ip-geolocation,ip-location,ip-address,ip-locator,ip-tracker,ip-geocoding,ip-api-geolocation,ip-api-location,ip-api-address,ip-api-locator,ip-api-tracker,ip-api-geocoding
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests

# üåç GeoLocation API

A simple API to retrieve timezone, locale, and geolocation data from an IP address. Perfect for enriching your application with accurate location-based accept-language and timezone details.

---

## üì¶ Installation

Install the package using pip:

```bash
pip install latlongtimezone-api
```

---

## üöÄ Usage

Here's how to get started with the `GeoLocation` class:

```python
from geolocation import GeoLocation

# Initialize the GeoLocation class with a proxy (if needed)
geo = GeoLocation(proxy="http://user:pass@host:port")

# Fetch geolocation data
geolocation_data = geo.get_geolocation()

# Print the geolocation data
print(geolocation_data)

# Returns the following dictionary:
{
    "lat": 48.8566,
    "lon": 2.3522,
    "timezone": "Europe/Paris",
    "locale": "fr-FR",
    "ip": "82.117.11.11"
}

```

---

## üõ†Ô∏è Features

- Fetch public IP address
- Retrieve latitude, longitude, timezone, and locale
- Cache results using Redis for faster subsequent lookups

---

## üìã Requirements

To use this package, you'll need:

- Python 3.6+
- `requests` library
- `redis` library
- `python-dotenv` library

Install the necessary dependencies with:

```bash
pip install requests redis python-dotenv
```

---

## üîß Configuration

Set up your Redis and proxy configurations in a `.env` file:

```plaintext
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=yourpassword
```

---

## üåü Contributing

Contributions are welcome! If you have suggestions or improvements, feel free to:

1. Open an issue to discuss the changes.
2. Submit a pull request with your enhancements.

---

## üë§ Author

**dormic97** - [GitHub Profile](https://github.com/pim97)

---

## üìù License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

---

Happy coding! üéâ

---

This version includes improved formatting, readability, and a clear flow for anyone using the API.
