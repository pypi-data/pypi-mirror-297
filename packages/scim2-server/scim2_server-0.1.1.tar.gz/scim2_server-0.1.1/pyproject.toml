[tool.poetry]
name = "scim2-server"
version = "0.1.1"
description = "Lightweight SCIM2 server prototype"
license = "Apache"
authors = [
    "Yaal Coop <contact@yaal.coop>",
    "Christian Friedrich Coors <me@ccoors.de>",
]
readme = "README.md"
keywords = ["scim", "scim2", "provisioning", "rfc7643", "rfc7644"]
repository = "https://github.com/yaal-coop/scim2-server"
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: MIT License",
    "Environment :: Web Environment",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
]

[tool.poetry.urls]
funding = "https://github.com/sponsors/yaal-coop"

[tool.poetry.dependencies]
python = "^3.11"
scim2-models = "^0.2.0"
werkzeug = "^3.0.3"
scim2-filter-parser = "^0.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-coverage = "^0.0"
httpx = "^0.27.0"
time-machine = "^2.14.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
scim2-server = "scim2_server.cli:main"

[tool.coverage.run]
source = [
    "scim2_server",
    "tests",
]
omit = [".tox/*", "examples/*", "scim2_server/cli.py"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "@pytest.mark.skip",
    "@pytest.mark.xfail",
    "pragma: no cover",
    "raise NotImplementedError",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "E722", # bare-except
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob='*.rst'"
doctest_optionflags= "ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL ELLIPSIS"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
skipsdist = true
envlist =
    style
    py311
    py312
    coverage

[testenv]
allowlist_externals = poetry
commands =
    poetry install
    poetry run pytest --showlocals --full-trace {posargs}

[testenv:style]
commands =
    pip install pre-commit
    pre-commit run --all-files

[testenv:coverage]
commands =
    poetry install
    poetry run pytest --cov --cov-fail-under=100 --cov-report term:skip-covered {posargs}
    poetry run coverage html
"""
