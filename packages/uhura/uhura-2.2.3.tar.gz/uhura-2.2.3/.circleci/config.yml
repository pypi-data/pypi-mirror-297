---
version: 2.1

commands:
  run_test_procedure:
    description: "Run the test procedure"
    steps:
      - checkout
      - run:
          name: "Install requirements"
          command: |
            pip install --upgrade pip
            pip install .[test]
      - run:
          name: "Run Python Tests"
          command: |
            pytest -vv --cov=uhura tests
      - run:
          name: Upload CodeCov report
          command: |
            (
                  curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import &&
                  curl -Os https://uploader.codecov.io/latest/linux/codecov &&
                  curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM &&
                  curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig &&
                  gpgv ./codecov.SHA256SUM.sig ./codecov.SHA256SUM &&
                  shasum -a 256 -c ./codecov.SHA256SUM &&
                  chmod +x ./codecov &&
                  ./codecov -t ${CODECOV_TOKEN}
            ) || true

jobs:
  style_checks:
    working_directory: ~/project
    docker:
      - image: cimg/python:3.8.13
    steps:
      - checkout
      - run:
          name: "Install requirements"
          command: |
            pip install --upgrade pip
            pip install .
            pip install black flake8
      - run:
          name: "Code Quality Check"
          command: |
            black --check uhura
            black --check tests
            flake8 --verbose uhura
            flake8 --verbose tests

  test_python_3_8:
    parallelism: 6
    working_directory: ~/project
    docker:
      - image: cimg/python:3.8.13
    steps:
      - run_test_procedure

  test_python_3_9:
    parallelism: 6
    working_directory: ~/project
    docker:
      - image: cimg/python:3.9.13
    steps:
      - run_test_procedure

  test_python_3_10:
    parallelism: 6
    working_directory: ~/project
    docker:
      - image: cimg/python:3.10.4
    steps:
      - run_test_procedure

  test_python_3_11:
    parallelism: 6
    working_directory: ~/project
    docker:
      - image: cimg/python:3.11.5
    steps:
      - run_test_procedure

  build_and_publish:
    working_directory: ~/project
    docker:
      - image: cimg/python:3.8.13
    steps:
      - checkout
      - run:
          name: "Install build requirements"
          command: |
            pip install --upgrade pip
            pip install .[build]
      - run:
          name: "Build package"
          command: |
            BUILD_VERSION=${CIRCLE_TAG:1} python setup.py sdist bdist_wheel
      - run:
          name: "Publish"
          command: |
            pip install --upgrade twine
            twine check dist/*
            twine upload dist/*

workflows:
  version: 2
  main:
    jobs:
      - style_checks:
          filters:
            tags:
              only: /v.*/
      - test_python_3_8:
          requires:
            - style_checks
          filters:
            tags:
              only: /v.*/
      - test_python_3_9:
          requires:
            - style_checks
          filters:
            tags:
              only: /v.*/
      - test_python_3_10:
          requires:
            - style_checks
          filters:
            tags:
              only: /v.*/
      - test_python_3_11:
          requires:
              - style_checks
          filters:
            tags:
              only: /v.*/
      - build_and_publish:
          requires:
            - test_python_3_8
            - test_python_3_9
            - test_python_3_10
            - test_python_3_11
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
