[project]
name = "pdm-dockerize"
description = "Help generating docker images from PDM projects"
authors = [
    { name = "Axel Haustant", email = "noirbizarre@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.8.1"
keywords = []
dynamic = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Code Generators",
    "Typing :: Typed",
]
dependencies = [
    "pdm>=2.19",
]
version = "0.6.0"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/noirbizarre/pdm-dockerize"
Documentation = "https://github.com/noirbizarre/pdm-dockerize#readme"
Repository = "https://github.com/noirbizarre/pdm-dockerize"
Issues = "https://github.com/noirbizarre/pdm-dockerize/issues"

[project.entry-points.pdm]
dockerize = "pdm_dockerize:plugin"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
plugins = [
    "sync-pre-commit-lock",
]

[tool.pdm.version]
source = "scm"
write_to = "pdm_dockerize/VERSION"

[tool.pdm.dev-dependencies]
test = [
    "pdm[pytest]",
    "pytest>=7.1.2",
    "pytest-sugar>=0.9.5",
    "pytest-cov>=3.0.0",
    "syrupy>=3.0.6",
    "shellcheck-py>=0.9.0.6",
]
lint = [
    "codespell>=2.2.6",
    "mypy>=1.5.1",
    "ruff>=0.3.0",
    "tomli; python_version<'3.11'",
]
tox = [
    "tox",
    "tox-pdm>=0.5",
]
release = [
    "emotional",
]

[tool.pdm.scripts]
pre_cover = "coverage erase"
"pre_cover:all" = "coverage erase"

[tool.pdm.scripts.test]
help = "Run the test suite"
cmd = "pytest"

[tool.pdm.scripts.lint]
help = "Lint all tracked files using pre-commit"
cmd = "pre-commit run --all-files"

[tool.pdm.scripts.format]
help = "Format the code according to known rules"
composite = [
    "codespell --write-changes --interactive 2",
    "ruff check --select I --fix-only --show-fixes src tests",
    "ruff format src tests",
]

[tool.pdm.scripts.typing]
help = "Full typing linting (includes imported packages and uncommmited files)"
cmd = "mypy src tests --warn-unused-ignores"

[tool.pdm.scripts.cover]
help = "Run the test suite with coverage"
composite = [
    "  test\n    --cov\n    --cov-report=term\n    --cov-report=html:reports/coverage\n    --cov-report=xml:reports/coverage.xml\n    --no-cov-on-fail\n    --junitxml=reports/tests.xml\n  ",
]

[tool.pdm.scripts."cover:all"]
help = "Run the test suite against all supported Python version"
cmd = "tox --parallel"

[tool.pdm.scripts.changelog]
help = "Update the changelog"
cmd = "cz changelog --incremental"

[tool.pdm.ide]
linters = [
    "ruff",
]
formatter = "black"
testing = "pytest"

[tool.pdm.dockerize]
include = "*"

[tool.commitizen]
name = "emotional"
github = "noirbizarre/pdm-dockerize"
order_by_scope = true
version_provider = "scm"
major_version_zero = true

[tool.pytest.ini_options]
addopts = "-ra --log-disable unearth.evaluator --log-disable unearth.collector --log-disable unearth.auth --log-disable pdm.termui"
norecursedirs = ".git build dist"
testpaths = [
    "src/",
    "tests/",
]

[tool.coverage.run]
source = [
    "src",
]
branch = true
omit = [
    "tests/*",
]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if TYPE_CHECKING:",
]
ignore_errors = true

[tool.ruff]
line-length = 100
respect-gitignore = true
src = [
    "src",
    "tests",
]

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C",
    "UP",
    "I001",
]

[tool.ruff.lint.isort]
known-first-party = [
    "pdm_dockerize",
]
known-third-party = [
    "pytest",
    "syrupy",
]

[tool.mypy]
exclude = [
    "docs",
    "build",
    "dist",
]

[tool.codespell]
skip = "__snapshots__,./reports"
