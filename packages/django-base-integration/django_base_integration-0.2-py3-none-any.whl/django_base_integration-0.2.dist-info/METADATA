Metadata-Version: 2.1
Name: django-base-integration
Version: 0.2
Summary: A Django app integrator
Author-email: Bogdan Belenesku <bogdanbelenesku@gmail.com>
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: django >=4.2
Requires-Dist: coreapi ==2.3.3
Requires-Dist: coreschema ==0.0.4
Requires-Dist: django-coreapi ==2.3.0
Requires-Dist: django-debug-toolbar ==4.1.0
Requires-Dist: djangorestframework ==3.14.0
Requires-Dist: djangorestframework-simplejwt ==5.2.2
Requires-Dist: drf-yasg ==1.21.7
Requires-Dist: psycopg2-binary ==2.9.6
Requires-Dist: PyJWT ==2.8.0
Requires-Dist: python-dotenv ===1.0.0

# MyHealth

***

### 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–Ω—Ñ–∏–≥–æ–º `.env.`

***

> db_name=`db_name`
> 
> db_user=`db_user`
> 
> db_password=`db_password`
> 
> db_host=`db_host`
>
> db_port=`db_port`
> 
> secret_key=`secret_key`
> 
> debug=`debug`
> 
> allowed_hosts=`localhost` `127.0.0.1`
> 
> trusted_hosts=`localhost` `127.0.0.1`
> 
> cors_hosts=`localhost` `127.0.0.1`

1. –í —Å—Ä–µ–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `export env_file=your_config_name`
2. `docker-compose.yml` –≤ —Å–µ—Ä–≤–∏—Å–µ `backend` –ø–æ–º–µ–Ω—è–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–Ω—Ñ–∏–≥–æ–º —É `command`
3. `docker-compose.yml` –≤ —Å–µ—Ä–≤–∏—Å–µ `postgres` –ø–æ–º–µ–Ω—è–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ `environment` –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞

***

### 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –°–£–ë–î postgres –∫ –ø—Ä–æ–µ–∫—Ç—É

***

**Linux**

> sudo apt install postgresql
> 
> sudo -u postgres psql
> 
> CREATE ROLE `db_user` WITH LOGIN SUPERUSER PASSWORD `db_password`;
> 
> CRATE DATABASE `db_name`;
> 
> GRANT ALL PRIVILEGES ON DATABASE `db_name` TO `db_user`;

1. –í –ø–∞–ø–∫–µ *server* —Å–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª .env, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–∏—à–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ,<br> 
–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏–µ—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö + `db_host` –∏ `db_port`
2. `python -m pip install psycopg-binary`
3. `python manage.py makemigrations`
4. `python manage.py migrate`

*–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ*: **–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å –∏ –∑–∞–±–µ–π—Ç–µ xxx**

**Windows**

*–ù–µ –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è*

***

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–≤

***

**Linux**

> sudo apt-get install pylint
> 
> `python -m pip install black`
> 
> `python -m pip install flake8`

1. –î–ª—è –∑–∞–ø—É—Å–∫–∞ pylint: `pylint ./app`
2. –î–ª—è –∑–∞–ø—É—Å–∫–∞ black: `black ./app`
3. –î–ª—è –∑–∞–ø—É—Å–∫–∞ flake8: `flake8 ./app`

**Windows**

*–ù–µ –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è*


***

### 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker üòà

***

**Linux**

> sudo apt install curl software-properties-common ca-certificates apt-transport-https -y
> 
> curl -f -s -S -L https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
> 
> sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
> 
> sudo apt-get install docker-ce -y
> 
> sudo apt-get install docker-compose

*–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ*: **–£–¥–∞—á–∏)**

1. `docker-compose build`
2. `docker-compose up -d`
3. `docker exec -ti myhealth_backend_1 /bin/bash`
4. `export env_file=your_env_file_name`
5. `python manage.py makemigrations app`
5. `python manage.py migrate`
6. `python manage.py createsuperuser`

ü•≥
