Metadata-Version: 2.1
Name: silverriver
Version: 0.1.35
Summary: SilverRiver SDK for advanced automation and AI-driven tasks
Author: Silvestro
Author-email: hello@silverstream.ai
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: httpx ==0.27.2
Requires-Dist: playwright ==1.46.0
Requires-Dist: pydantic ==2.8.2
Requires-Dist: python-dotenv ==1.0.1
Requires-Dist: slack-sdk ==3.31.0
Requires-Dist: tabulate ==0.9.0

# SilverRiver

SilverRiver is an SDK for advanced automation and AI-driven tasks.

## Installation

You can install SilverRiver using pip:

```
pip install silverriver
```

## Usage

Here's a basic example of how to use SilverRiver:

```python
from silverriver.client import Crux
from silverriver.interfaces.chat import AgentChatInterface

# Initialize the Crux client
client = Crux(api_key="your_api_key_here")

# Create a chat interface (implement AgentChatInterface)
chat = YourChatImplementation()

# Create a browser session
browser_session, browser_obs, browser_meta = client.create_browser_session(start_url="https://www.example.com", chat=chat)

# Use the browser session to interact with web pages
# ...

# Get actions from the AI agent
observation = create_observation(browser_obs, chat.chat_history)
action = client.get_action(observation)

# Execute the action
browser_obs = browser_session.execute(action)
```

For more detailed examples and documentation, please refer to the `example.py` file in the source code.

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License.
