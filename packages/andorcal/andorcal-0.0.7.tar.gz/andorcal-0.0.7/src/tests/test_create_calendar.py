import pandas as pd
from datetime import datetime, timedelta
from andorcal.calendar_util import datetime_range
from andorcal.const import datetime_fmt

def test_datetime_range_hour_include():
    start = datetime(2024, 3, 30, 22)
    end = datetime(2024, 4, 1)
    

    out = datetime_range(start=start,
                         start_is_dst=False,
                         end=end,
                         end_is_dst=True,
                         delta=timedelta(hours=1),
                         include=True,
                         as_utc=False)
    
    out = [datetime.strftime(i, datetime_fmt) for i in out]

    assert out == ["2024-03-30 22:00:00",
        "2024-03-30 23:00:00",
        "2024-03-31 00:00:00",
        "2024-03-31 01:00:00",
        "2024-03-31 02:00:00",
        "2024-03-31 03:00:00",
        "2024-03-31 04:00:00",
        "2024-03-31 05:00:00",
        "2024-03-31 06:00:00",
        "2024-03-31 07:00:00",
        "2024-03-31 08:00:00",
        "2024-03-31 09:00:00",
        "2024-03-31 10:00:00",
        "2024-03-31 11:00:00",
        "2024-03-31 12:00:00",
        "2024-03-31 13:00:00",
        "2024-03-31 14:00:00",
        "2024-03-31 15:00:00",
        "2024-03-31 16:00:00",
        "2024-03-31 17:00:00",
        "2024-03-31 18:00:00",
        "2024-03-31 19:00:00",
        "2024-03-31 20:00:00",
        "2024-03-31 21:00:00",
        "2024-03-31 22:00:00",
        "2024-03-31 23:00:00",
        "2024-04-01 00:00:00"]


def test_datetime_range_hour_include_utc():
    start = datetime(2024, 3, 30, 22)
    end = datetime(2024, 4, 1)
    

    out = datetime_range(start=start,
                         start_is_dst=False,
                         end=end,
                         end_is_dst=True,
                         delta=timedelta(hours=1),
                         include=True,
                         as_utc=True)
    
    out = [datetime.strftime(i, datetime_fmt + "%z") for i in out]
    
    model= [
    '2024-03-30 21:00:00+0000',
    '2024-03-30 22:00:00+0000',
    '2024-03-30 23:00:00+0000',
    '2024-03-31 00:00:00+0000',
    '2024-03-31 01:00:00+0000',
    '2024-03-31 02:00:00+0000',
    '2024-03-31 03:00:00+0000',
    '2024-03-31 04:00:00+0000',
    '2024-03-31 05:00:00+0000',
    '2024-03-31 06:00:00+0000',
    '2024-03-31 07:00:00+0000',
    '2024-03-31 08:00:00+0000',
    '2024-03-31 09:00:00+0000',
    '2024-03-31 10:00:00+0000',
    '2024-03-31 11:00:00+0000',
    '2024-03-31 12:00:00+0000',
    '2024-03-31 13:00:00+0000',
    '2024-03-31 14:00:00+0000',
    '2024-03-31 15:00:00+0000',
    '2024-03-31 16:00:00+0000',
    '2024-03-31 17:00:00+0000',
    '2024-03-31 18:00:00+0000',
    '2024-03-31 19:00:00+0000',
    '2024-03-31 20:00:00+0000',
    '2024-03-31 21:00:00+0000',
    '2024-03-31 22:00:00+0000'
    ]
    
    assert out == model
