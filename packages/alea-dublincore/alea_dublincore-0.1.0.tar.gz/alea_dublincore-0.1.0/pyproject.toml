[tool.poetry]
name = "alea-dublincore"
version = "0.1.0"
description = "ALEA Dublin Core Metadata library with zero dependencies"
authors = ["ALEA Institute <hello@aleainstitute.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://aleainstitute.ai/"
repository = "https://github.com/alea-institute/alea-dublincore"
keywords = ["alea"]

# dist build configuration
include = ["alea_dublincore"]
packages = [{ include = "alea_dublincore" }]
exclude = ["tests", "docs", "examples", "docker"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
pylint = "^3.2.7"
pytest-asyncio = "^0.23.8"
pytest-benchmark = "^4.0.0"
pytest-cov = "^5.0.0"

[tool.poetry.extras]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint]
max-line-length = 120
disable = [
    "line-too-long",
    "too-few-public-methods",
    "no-self-argument",
    "cyclic-import"
]
extension-pkg-allow-list = ["lxml"]
ignore-patterns = ["test_.*?.py", "conftest.py"]

[tool.pylint.messages_control]
max-args = 10
max-attributes = 15
max-branches = 15
max-locals = 25
min-public-methods = 0

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
addopts = "--cov=alea_dublincore --cov-report=term-missing --cov-report=xml --cov-report=html"

[tool.mypy]
ignore_missing_imports = true
