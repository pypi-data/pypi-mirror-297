name: Python

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    paths:
      - src/**
      - codenav-python/**
      - .github/workflows/python.yml

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          # Note that aarch64, armv7, s390x and ppc64le are commented out since there are some issues
          # when building tree-sitter-javascript v0.20.4 and tree-sitter-typescript v0.20.2:
          #
          #     error: 'for' loop initial declarations are only allowed in C99 mode
          #
          # See https://github.com/RussellLuo/codenav/actions/runs/10961482459/job/30438509720.
          #
          #- runner: ubuntu-latest
          #  target: aarch64
          #- runner: ubuntu-latest
          #  target: armv7
          #- runner: ubuntu-latest
          #  target: s390x
          #- runner: ubuntu-latest
          #  target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m codenav-python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m codenav-python/Cargo.toml
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m codenav-python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter -m codenav-python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          # version pinned until https://github.com/PyO3/maturin/issues/2154 is fixed
          maturin-version: v1.6.0
          command: sdist
          args: --out dist -m codenav-python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  check-release:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check-release-commit.outputs.release }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check if it's a release commit
      id: check-release-commit
      run: |
        commit_message=$(git log --format=%B -n 1)
        echo "Commit message: '$commit_message'"
        if [[ "$commit_message" =~ ^Release\ v[0-9]+(\.[0-9]+)* ]]; then
          echo "::set-output name=release::true"
        else
          echo "::set-output name=release::false"
        fi

  release:
    name: Release
    runs-on: ubuntu-latest
    #if: needs.check-release.outputs.release == 'true'
    needs: [linux, musllinux, windows, macos, sdist]
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            python:
              - 'src/**'
              - 'codenav-python/src/**'
              - 'codenav-python/Cargo.toml'
              - 'codenav-python/pyproject.toml'
      - uses: actions/download-artifact@v4
        #if: steps.filter.outputs.python == 'true'
      - name: Publish to PyPI
        #if: steps.filter.outputs.python == 'true'
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
