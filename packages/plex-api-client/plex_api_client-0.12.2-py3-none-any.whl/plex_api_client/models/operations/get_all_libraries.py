"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from plex_api_client.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class LocationTypedDict(TypedDict):
    id: NotRequired[int]
    path: NotRequired[str]


class Location(BaseModel):
    id: Optional[int] = None

    path: Optional[str] = None


class GetAllLibrariesDirectoryTypedDict(TypedDict):
    allow_sync: NotRequired[bool]
    art: NotRequired[str]
    composite: NotRequired[str]
    filters: NotRequired[bool]
    refreshing: NotRequired[bool]
    thumb: NotRequired[str]
    key: NotRequired[str]
    type: NotRequired[str]
    title: NotRequired[str]
    agent: NotRequired[str]
    scanner: NotRequired[str]
    language: NotRequired[str]
    uuid: NotRequired[str]
    updated_at: NotRequired[int]
    r"""Unix epoch datetime"""
    created_at: NotRequired[int]
    r"""Unix epoch datetime"""
    scanned_at: NotRequired[int]
    r"""Unix epoch datetime"""
    content: NotRequired[bool]
    directory: NotRequired[bool]
    content_changed_at: NotRequired[int]
    hidden: NotRequired[int]
    location: NotRequired[List[LocationTypedDict]]


class GetAllLibrariesDirectory(BaseModel):
    allow_sync: Annotated[Optional[bool], pydantic.Field(alias="allowSync")] = None

    art: Optional[str] = None

    composite: Optional[str] = None

    filters: Optional[bool] = None

    refreshing: Optional[bool] = None

    thumb: Optional[str] = None

    key: Optional[str] = None

    type: Optional[str] = None

    title: Optional[str] = None

    agent: Optional[str] = None

    scanner: Optional[str] = None

    language: Optional[str] = None

    uuid: Optional[str] = None

    updated_at: Annotated[Optional[int], pydantic.Field(alias="updatedAt")] = None
    r"""Unix epoch datetime"""

    created_at: Annotated[Optional[int], pydantic.Field(alias="createdAt")] = None
    r"""Unix epoch datetime"""

    scanned_at: Annotated[Optional[int], pydantic.Field(alias="scannedAt")] = None
    r"""Unix epoch datetime"""

    content: Optional[bool] = None

    directory: Optional[bool] = None

    content_changed_at: Annotated[
        Optional[int], pydantic.Field(alias="contentChangedAt")
    ] = None

    hidden: Optional[int] = None

    location: Annotated[Optional[List[Location]], pydantic.Field(alias="Location")] = (
        None
    )


class GetAllLibrariesMediaContainerTypedDict(TypedDict):
    size: int
    allow_sync: bool
    title1: str
    directory: NotRequired[List[GetAllLibrariesDirectoryTypedDict]]


class GetAllLibrariesMediaContainer(BaseModel):
    size: int

    allow_sync: Annotated[bool, pydantic.Field(alias="allowSync")]

    title1: str

    directory: Annotated[
        Optional[List[GetAllLibrariesDirectory]], pydantic.Field(alias="Directory")
    ] = None


class GetAllLibrariesResponseBodyTypedDict(TypedDict):
    r"""The libraries available on the Server"""

    media_container: NotRequired[GetAllLibrariesMediaContainerTypedDict]


class GetAllLibrariesResponseBody(BaseModel):
    r"""The libraries available on the Server"""

    media_container: Annotated[
        Optional[GetAllLibrariesMediaContainer], pydantic.Field(alias="MediaContainer")
    ] = None


class GetAllLibrariesResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[GetAllLibrariesResponseBodyTypedDict]
    r"""The libraries available on the Server"""


class GetAllLibrariesResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[GetAllLibrariesResponseBody] = None
    r"""The libraries available on the Server"""
