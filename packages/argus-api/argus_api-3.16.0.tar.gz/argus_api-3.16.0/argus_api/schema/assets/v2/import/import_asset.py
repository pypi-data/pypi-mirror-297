"""Autogenerated API schema"""
from argus_api import session


import_asset = {'tags': ['development'], 'summary': 'Imports Assets (DEV)', 'description': '', 'operationId': 'importAsset', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Asset import request', 'required': False, 'schema': {'type': 'object', 'required': ['assetIdentification', 'customer', 'dataSource'], 'properties': {'assetName': {'type': 'str', 'position': 0, 'description': 'Display name of the Asset. Used if new asset. If not set a random UUID will be generated'}, 'dataSource': {'type': 'str', 'position': 0, 'description': 'Required ID or short name of the data source'}, 'customer': {'type': 'str', 'position': 0, 'description': "ID or short name of the asset's customer"}, 'assetIdentification': {'type': 'dict', 'required': ['assetDefinition', 'strategy'], 'properties': {'strategy': {'type': 'str', 'position': 0, 'description': 'Identification strategy to be used - by asset or by component', 'enum': ['asset', 'component']}, 'asset': {'type': 'str', 'position': 0, 'description': 'ID or shortName of asset - required if identifying by asset'}, 'assetDefinition': {'type': 'str', 'position': 0, 'description': "ID or shortname of the asset's definition"}, 'identificationComponent': {'type': 'str', 'position': 0, 'description': 'ID or shortName of component - required if identifying by component'}, 'identificationComponentValue': {'type': 'str', 'position': 0, 'description': 'Component value, parsed based on the component definition type - required if identifying by component'}}, 'description': 'Request to identify an Asset'}, 'components': {'type': 'list', 'position': 0, 'description': 'Specify components to import', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'value'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'ID Or shortName of component definition'}, 'value': {'type': 'str', 'position': 0, 'description': "Value which is parsed based on the definition's type"}}, 'description': 'Request to import Components to an Asset'}}, 'observations': {'type': 'list', 'position': 0, 'description': 'Observations to be added to the asset', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['cvss', 'vulnerability'], 'properties': {'vulnerability': {'type': 'str', 'position': 0, 'description': 'Identify the Vulnerability definition by ID (UUID) or vulnerability identifier (e.g. CVE-2015-3429) => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Optional field which describes the severity of the observation', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output of the scanner'}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS score of the observation (range from 0 to 10) (default 0.0)', 'minimum': 0, 'maximum': 10, 'default': 0.0}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description of observation'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Observation references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Observation components connected to the observation', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['component', 'value'], 'properties': {'component': {'type': 'str', 'position': 0, 'description': 'Id or short name of component definition'}, 'value': {'type': 'str', 'position': 0, 'description': 'Component value, will be eventually parsed based on the component definition type'}}, 'description': 'Observation components connected to an observation import in a data import request'}}}, 'description': 'Request to record vulnerabilities observed on an asset submitted to the asset import endpoint'}}, 'ttl': {'type': 'int', 'position': 0, 'description': "Time to live duration of this asset since last seen, 0 means won't expire.", 'minimum': 0}}, 'description': 'Request to import an Asset'}}], 'responses': {'200': {'description': 'OK'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}