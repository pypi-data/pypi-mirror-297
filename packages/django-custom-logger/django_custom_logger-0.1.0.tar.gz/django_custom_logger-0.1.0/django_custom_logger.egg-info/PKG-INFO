Metadata-Version: 2.1
Name: django-custom-logger
Version: 0.1.0
Summary: A custom logging package for Django applications with automatic configuration
Home-page: https://github.com/yourusername/django-custom-logger
Author: Niraj Vivek
Author-email: nrjvivek876@gmail.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Framework :: Django
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django>=2.2

# Django Custom Logger

A custom logging package for Django applications that provides enhanced logging capabilities, including request ID tracking and size-based log rotation.

## Installation

You can install the package using pip:

```
pip install django-custom-logger
```

## Usage

1. Add `django_custom_logger` to your `INSTALLED_APPS` in your Django settings:

```python
INSTALLED_APPS = [
    ...
    'django_custom_logger',
    ...
]
```

2. Add the middleware to your `MIDDLEWARE` setting:

```python
MIDDLEWARE = [
    ...
    'django_custom_logger.RequestResponseLoggingMiddleware',
    ...
]
```

3. (Optional) Configure custom logger settings in your Django `settings.py`:

```python
# Custom logger settings (optional)
CUSTOM_LOGGER_DIR = os.path.join(BASE_DIR, 'logs')  # Default is BASE_DIR/logs
CUSTOM_LOGGER_FILE = 'my_custom_log.log'  # Default is 'django_custom_logger.log'
CUSTOM_LOGGER_MAX_BYTES = 10 * 1024 * 1024  # Default is 5MB
CUSTOM_LOGGER_KEEP_DAYS = 14  # Default is 30 days
CUSTOM_LOGGER_LEVEL = 'INFO'  # Default is 'DEBUG'
```

4. Use the logger in your code:

```python
import logging

logger = logging.getLogger(__name__)
logger.info('Your log message here')
```

## Features

- Request ID tracking
- Size and time-based log rotation
- Automatic cleanup of old log files
- Request and response logging middleware
- Automatic configuration on app startup

## License

This project is licensed under the MIT License - see the LICENSE file for details.
