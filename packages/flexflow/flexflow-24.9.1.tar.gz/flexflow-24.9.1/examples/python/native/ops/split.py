# The basis for this test of the 'split' operation is generated by ChatGPT using the manually created conv2d.py as a template.

from typing import List

import flexflow.core
import numpy as np
from flexflow.core import *

def test_split(ffconfig, input_arr: np.ndarray) -> List[flexflow.core.Tensor]:
    ffmodel = FFModel(ffconfig)

    input_tensor = ffmodel.create_tensor(input_arr.shape, DataType.DT_FLOAT)

    out1, out2 = ffmodel.split(input_tensor, 2, axis=1)

    ffoptimizer = SGDOptimizer(ffmodel, 0.001)
    ffmodel.optimizer = ffoptimizer
    ffmodel.compile(
        loss_type=LossType.LOSS_SPARSE_CATEGORICAL_CROSSENTROPY,
        metrics=[MetricsType.METRICS_ACCURACY, MetricsType.METRICS_SPARSE_CATEGORICAL_CROSSENTROPY])
    dataloader_input = ffmodel.create_data_loader(input_tensor, input_arr)

    ffmodel.init_layers()

    dataloader_input.reset()
    dataloader_input.next_batch(ffmodel)

    ffmodel.forward()

    out1.inline_map(ffmodel, ffconfig)
    out2.inline_map(ffmodel, ffconfig)

    return [out1.get_array(ffmodel, ffconfig), out2.get_array(ffmodel, ffconfig)]


if __name__ == '__main__':
    init_flexflow_runtime()
    ffconfig = FFConfig()

    input = np.random.randn(ffconfig.batch_size, 10, 10, 10).astype(np.float32)
    output_list = test_split(ffconfig, input)

    print("Output Tensor 1:")
    print(output_list[0])

    print("\nOutput Tensor 2:")
    print(output_list[1])
