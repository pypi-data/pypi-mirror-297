# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MAKE_COLOR_MAP_METADATA = Metadata(
    id="5b3d8115e0e545706bcf37b8ac3fc6319d6fe5d0.boutiques",
    name="MakeColorMap",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class MakeColorMapOutputs(typing.NamedTuple):
    """
    Output object returned when calling `make_color_map(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    afni_hex_output_prefix: OutputPathType
    """Prefix for individual color values in AFNI Hex format."""
    palette_file_output: OutputPathType
    """Example palette file output."""


def make_color_map(
    runner: Runner | None = None,
) -> MakeColorMapOutputs:
    """
    Utility for creating and modifying colormaps with various formats and fiducial
    points.
    
    Author: AFNI Team
    
    URL: https://afni.nimh.nih.gov/pub/dist/doc/program_help/MakeColorMap.html
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MakeColorMapOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MAKE_COLOR_MAP_METADATA)
    cargs = []
    cargs.append("MakeColorMap")
    cargs.append("[OPTIONS]")
    ret = MakeColorMapOutputs(
        root=execution.output_file("."),
        afni_hex_output_prefix=execution.output_file("[PREFIX]_01"),
        palette_file_output=execution.output_file("TestPalette.pal"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MAKE_COLOR_MAP_METADATA",
    "MakeColorMapOutputs",
    "make_color_map",
]
