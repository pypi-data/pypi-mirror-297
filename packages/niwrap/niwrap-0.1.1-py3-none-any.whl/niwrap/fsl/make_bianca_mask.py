# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MAKE_BIANCA_MASK_METADATA = Metadata(
    id="5197c8d961d270d79b99c4f3dfe3006dbc6c90ae.boutiques",
    name="make_bianca_mask",
    package="fsl",
    container_image_tag="mcin/fsl:6.0.5",
)


class MakeBiancaMaskOutputs(typing.NamedTuple):
    """
    Output object returned when calling `make_bianca_mask(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_image: OutputPathType
    """Output image"""


def make_bianca_mask(
    runner: Runner | None = None,
) -> MakeBiancaMaskOutputs:
    """
    A script for generating BIANCA masks.
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MakeBiancaMaskOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MAKE_BIANCA_MASK_METADATA)
    cargs = []
    cargs.append("/usr/local/fsl/bin/make_bianca_mask")
    cargs.append("<Usage:>")
    cargs.append("<Main")
    cargs.append("bet2")
    cargs.append("options>")
    cargs.append("<Variations")
    cargs.append("on")
    cargs.append("default")
    cargs.append("bet2")
    cargs.append("functionality")
    cargs.append("(mutually")
    cargs.append("exclusive")
    cargs.append("options):>")
    cargs.append("<Miscellaneous")
    cargs.append("options:>")
    ret = MakeBiancaMaskOutputs(
        root=execution.output_file("."),
        output_image=execution.output_file("[OUTPUT_IMAGE]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MAKE_BIANCA_MASK_METADATA",
    "MakeBiancaMaskOutputs",
    "make_bianca_mask",
]
