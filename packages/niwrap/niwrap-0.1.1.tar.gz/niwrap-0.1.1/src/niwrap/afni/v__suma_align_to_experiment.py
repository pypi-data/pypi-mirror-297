# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

V__SUMA_ALIGN_TO_EXPERIMENT_METADATA = Metadata(
    id="f2f26937329becfebaa8846f69efba5bc54af24c.boutiques",
    name="@SUMA_AlignToExperiment",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class VSumaAlignToExperimentOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__suma_align_to_experiment(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    aligned_volume: OutputPathType
    """Output volume after alignment."""
    additional_followers: OutputPathType
    """Output followers dataset after transforming."""


def v__suma_align_to_experiment(
    runner: Runner | None = None,
) -> VSumaAlignToExperimentOutputs:
    """
    Creates a version of Surface Anatomy that is registered to Experiment Anatomy.
    
    Author: AFNI Team
    
    URL:
    https://afni.nimh.nih.gov/pub/dist/doc/program_help/@SUMA_AlignToExperiment.html
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VSumaAlignToExperimentOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__SUMA_ALIGN_TO_EXPERIMENT_METADATA)
    cargs = []
    cargs.append("@SUMA_AlignToExperiment")
    cargs.append("<-exp_anat")
    cargs.append("$$exp_anat$$>")
    cargs.append("<-surf_anat")
    cargs.append("$$surf_anat$$>")
    cargs.append("$$dxyz$$")
    cargs.append("$$wd$$")
    cargs.append("$$prefix$$")
    cargs.append("$$EA_clip_below$$")
    cargs.append("$$align_centers$$")
    cargs.append("$$ok_change_view$$")
    cargs.append("$$strip_skull$$")
    ret = VSumaAlignToExperimentOutputs(
        root=execution.output_file("."),
        aligned_volume=execution.output_file("[PREFIX]_Alnd_Exp.nii.gz"),
        additional_followers=execution.output_file("[PREFIX]_Alnd_Exp_Fdset.nii.gz"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VSumaAlignToExperimentOutputs",
    "V__SUMA_ALIGN_TO_EXPERIMENT_METADATA",
    "v__suma_align_to_experiment",
]
