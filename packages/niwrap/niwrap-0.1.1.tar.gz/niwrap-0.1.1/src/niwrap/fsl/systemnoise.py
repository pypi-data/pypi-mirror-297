# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

SYSTEMNOISE_METADATA = Metadata(
    id="342f5f005f89ccb84419c01a8e3c010a5933be2a.boutiques",
    name="systemnoise",
    package="fsl",
    container_image_tag="mcin/fsl:6.0.5",
)


class SystemnoiseOutputs(typing.NamedTuple):
    """
    Output object returned when calling `systemnoise(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_signal_file: OutputPathType
    """Output signal with added system noise"""


def systemnoise(
    runner: Runner | None = None,
) -> SystemnoiseOutputs:
    """
    Tool for adding system noise to a given signal using FSL's utilities.
    
    Author: University of Oxford (Mark Jenkinson)
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/SystemNoise
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SystemnoiseOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SYSTEMNOISE_METADATA)
    cargs = []
    cargs.append("systemnoise")
    cargs.append("[OPTIONS]")
    ret = SystemnoiseOutputs(
        root=execution.output_file("."),
        output_signal_file=execution.output_file("[OUTPUT_SIGNAL]"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SYSTEMNOISE_METADATA",
    "SystemnoiseOutputs",
    "systemnoise",
]
