# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MASKDYADS_METADATA = Metadata(
    id="70afa57ee8266eb294a4d388bcf8ef82305bc603.boutiques",
    name="maskdyads",
    package="fsl",
    container_image_tag="mcin/fsl:6.0.5",
)


class MaskdyadsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `maskdyads(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def maskdyads(
    dyads: InputPathType,
    fsamples: InputPathType,
    threshold: float | None = 0.05,
    runner: Runner | None = None,
) -> MaskdyadsOutputs:
    """
    Tool to mask dyads with threshold.
    
    Author: Author Name
    
    Args:
        dyads: Input dyads file.
        fsamples: Input fsamples file.
        threshold: Threshold (default is 0.05).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MaskdyadsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MASKDYADS_METADATA)
    cargs = []
    cargs.append("maskdyads")
    cargs.append(execution.input_file(dyads))
    cargs.append(execution.input_file(fsamples))
    if threshold is not None:
        cargs.extend([
            "[THR]",
            str(threshold)
        ])
    ret = MaskdyadsOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MASKDYADS_METADATA",
    "MaskdyadsOutputs",
    "maskdyads",
]
