# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

FABBER_DWI_METADATA = Metadata(
    id="2ab697cea205122397d315705e8906f76b67636d.boutiques",
    name="fabber_dwi",
    package="fsl",
    container_image_tag="mcin/fsl:6.0.5",
)


class FabberDwiOutputs(typing.NamedTuple):
    """
    Output object returned when calling `fabber_dwi(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_files: OutputPathType
    """All outputs will be stored in the specified output directory"""


def fabber_dwi(
    runner: Runner | None = None,
) -> FabberDwiOutputs:
    """
    Fabber diffusion-weighted imaging tool for model-based analysis using forward
    models and different inference methods.
    
    Author: Release Team
    
    URL: https://www.fmrib.ox.ac.uk/fabber_dwi
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FabberDwiOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FABBER_DWI_METADATA)
    cargs = []
    cargs.append("fabber")
    cargs.append("[PARAMS]")
    ret = FabberDwiOutputs(
        root=execution.output_file("."),
        output_files=execution.output_file("[OUTPUT_DIR]/*"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "FABBER_DWI_METADATA",
    "FabberDwiOutputs",
    "fabber_dwi",
]
