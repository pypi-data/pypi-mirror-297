Metadata-Version: 2.1
Name: subdomainradar
Version: 1.0.0
Summary: Python wrapper for SubdomainRadar.io API
Home-page: https://github.com/alexandrevandamme59/subdomainradar-python-wrapper
Author: Alexandre Vandamme
Author-email: alexandrevandammepro@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.0.0

# SubdomainRadar API Wrappers

This repository contains Python and PHP wrappers for the SubdomainRadar API, allowing you to interact with the SubdomainRadar service for enumerating subdomains, managing tasks, performing reverse searches.

## Table of Contents

- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
  - [Python](#python)
  - [PHP](#php)
- [API Methods](#api-methods)
  - [Python Methods](#python-methods)
  - [PHP Methods](#php-methods)
- [Contribution](#contribution)
- [License](#license)

## Features

- List enumerators
- List enumerator groups
- Retrieve user profile
- Manage tasks
- Perform reverse search
- Enumerate domains
- Retrieve excluded domains and TLDs

## Installation

### Python

1. Clone the repository:

    ```sh
    git clone https://github.com/AlexandreVandamme59/subdomainradar-wrappers.git
    ```

2. Navigate to the project directory:

    ```sh
    cd subdomainradar-wrappers
    ```

3. Install the required Python packages:

    ```sh
    pip install -r requirements.txt
    ```

### PHP

1. Clone the repository:

    ```sh
    git clone https://github.com/AlexandreVandamme59/subdomainradar-wrappers.git
    ```

2. Navigate to the project directory:

    ```sh
    cd subdomainradar-wrappers
    ```

3. Ensure you have the required PHP extensions installed, such as `cURL` and `JSON`.

## Usage

### Python 3.9+

1. Import the `SubdomainRadarAPI` class:

    ```python
    from subdomainradar import SubdomainRadarAPI
    ```

2. Create an instance of the `SubdomainRadarAPI` class:

    ```python
    api = SubdomainRadarAPI(base_url="https://api.subdomainradar.io", api_key="YOUR_API_KEY")
    ```

3. Call the available methods:

    ```python
    # Enumerate domains
    domains = ["tesla.com", "google.com"]
    results = api.enumerate_domains_with_results(domains=domains, group="Fast")
    print(results)
    ```

### PHP8

1. Include the `subdomainradar.php` file:

    ```php
    <?php
    require 'subdomainradar.php';
    ```

2. Create an instance of the `SubdomainRadarAPI` class:

    ```php
    $api = new SubdomainRadarAPI("https://api.subdomainradar.io", "YOUR_API_KEY");
    ```

3. Call the available methods:

    ```php
    // Enumerate domains
    $domains = ["tesla.com", "google.com"];
    $results = $api->enumerate_domains_with_results($domains, null, "Fast");
    print_r($results);
    ?>
    ```

## API Methods

### Python Methods

- **Enumerators**
  - `list_enumerators()`
  - `list_enumerator_groups()`
  
- **Profile**
  - `get_profile()`
  
- **Tasks**
  - `get_task(task_id)`
  - `list_tasks()`
  - `enumerate_domains(domains, enumerators=None, group=None)`
  - `enumerate_domains_with_results(domains, enumerators=None, group=None)`
  
- **Reverse Search**
  - `reverse_search(subdomain_part=None, domain_part=None, tld_part=None, exclude_generic_hosting_domains=False, exclude_gov_ed_domains=False)`
  
- **Excludes**
  - `get_excludes()`

### PHP Methods

- **Enumerators**
  - `list_enumerators()`
  - `list_enumerator_groups()`
  
- **Profile**
  - `get_profile()`
  
- **Tasks**
  - `get_task($task_id)`
  - `list_tasks()`
  - `enumerate_domains($domains, $enumerators=null, $group=null)`
  - `enumerate_domains_with_results($domains, $enumerators=null, $group=null)`
  
- **Reverse Search**
  - `reverse_search($subdomain_part=null, $domain_part=null, $tld_part=null, $exclude_generic_hosting_domains=false, $exclude_gov_ed_domains=false)`
  
- **Excludes**
  - `get_excludes()`

## Contribution

Contributions are welcome! Please open an issue or submit a pull request for any changes or improvements.

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
