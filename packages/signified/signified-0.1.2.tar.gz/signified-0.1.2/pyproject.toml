[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "signified"
version = "0.1.2"
dependencies = [
    "ipython",
    "numpy",
    "typing-extensions; python_version < '3.11'"
]
requires-python = ">=3.9"
authors = [
    {name = "Doug Mercer", email = "mercer321@gmail.com"},
]
maintainers = [
    {name = "Doug Mercer", email = "mercer321@gmail.com"},
]
description = "Reactive Signals and Computed values."
readme = "README.md"
license = {file="LICENSE"}
keywords = ["reactive", "signals"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]

[tool.setuptools.packages.find]
where = ["src"]

[project.urls]
Homepage = "https://github.com/dougmercer/signified.git"
Documentation = "https://dougmercer.github.io/signified"
Repository = "https://github.com/dougmercer/signified.git"
Issues = "https://github.com/dougmercer/signified/issues"
Changelog = "https://dougmercer.github.io/signified/changelog"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    ".__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "envs",
    "htmlcov",
    "results",
    "significant.egg-info",
    "junk",
    ".hypothesis",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.black]
target-version = ['py312']
line_length = 120
exclude = '''
(
	build
  | docs
  | envs
  | htmlcov
  | results
  | tests-reports
  | signified.egg-info
  | data
  | junk
  | \.egg
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.hypothesis
  | \.ipynb_checkpoints
  | \.__pycache__
)
'''

[tool.isort]
known_third_party = ["tqdm"]
profile = "black"
case_sensitive = true
combine_as_imports = true
include_trailing_comma = true
line_length = 120
multi_line_output=3
py_version = 312
src_paths = ["signified.py", "tests"]
skip_glob = [ "**/.ipynb_checkpoints"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov=src/ --cov-report=xml --junitxml=junit/test-results.xml"
filterwarnings = [
    "ignore::DeprecationWarning",
]
testpaths = [
	"tests",
    "signified.py"
]
