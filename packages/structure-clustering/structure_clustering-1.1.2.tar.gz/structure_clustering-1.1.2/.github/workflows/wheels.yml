name: Wheels

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-12, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: yezz123/setup-uv@v4

      - uses: pypa/cibuildwheel@v2.20
        env:
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* cp312-*" # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          CIBW_SKIP: "*-musllinux_x86_64 *_i686" # Skip musllinux, and i686
          CIBW_BEFORE_ALL_LINUX: >
            mkdir boost && cd boost &&
            curl -L -o boost_1_86_0.tar.bz2 https://sourceforge.net/projects/boost/files/boost/1.86.0/boost_1_86_0.tar.bz2/download &&
            tar xf boost_1_86_0.tar.bz2 &&
            mv boost_1_86_0 boost
          CIBW_BEFORE_ALL_MACOS: >
            mkdir boost && cd boost &&
            wget 'https://sourceforge.net/projects/boost/files/boost/1.86.0/boost_1_86_0.tar.bz2' && 
            tar xf boost_1_86_0.tar.bz2 &&
            mv boost_1_86_0 boost
          CIBW_BEFORE_ALL_WINDOWS: >
            mkdir boost && cd boost &&
            curl -L -o boost_1_86_0.zip https://sourceforge.net/projects/boost/files/boost/1.86.0/boost_1_86_0.zip/download && 
            tar xf boost_1_86_0.zip &&
            ren boost_1_86_0 boost

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
