import{d as x,h as y,W as b,K as h,i as w,c as g,j as a,k,u as v,o as C,l as u,m as e,E as B,I as r,A as E,q as I,L as d,Y as W}from"./index-CfSL_DzU.js";import{_ as q}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-DPiBH7DT.js";import{u as N}from"./usePageTitle-TG-RZAHq.js";import{u as P}from"./usePrefectApi-DAxo_AEZ.js";const j=x({__name:"AutomationEdit",async setup(T){let o,m;const i=P(),c=y(),_=v(),p=b("automationId"),s=([o,m]=h(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=w(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function A(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=W(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=k("p-layout-default");return C(),g(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(I),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[E(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(q,{automation:e(s),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{j as default};
//# sourceMappingURL=AutomationEdit-DgNHsmUd.js.map
