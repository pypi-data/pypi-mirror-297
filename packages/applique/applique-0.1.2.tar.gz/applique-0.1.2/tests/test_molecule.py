"""
Unittests to test molecule object
"""

import unittest
from rdkit import Chem
from rdkit.Chem import (
    rdDepictor,
)  # otherwise it gives import errors during the tests. Strange

import applique as ap
from applique.molecule import Molecule as Mol


class TestMolecule(unittest.TestCase):

    mol_file_benzene = "tests/molecules/benzene.mol"
    mol_file_cyclohexane = "tests/molecules/cyclohexane.mol"
    benzene = Mol()
    benzene = benzene.from_mol(mol_file_benzene)
    cyclohexane = Mol().from_mol(mol_file_cyclohexane)

    def test_from_mol(self):

        assert type(self.benzene.rdmol) == type(
            Chem.rdmolfiles.MolFromMolFile(self.mol_file_benzene)
        )

    def test_struct2D(self):

        ref_benzene = [
            [1.5000000000000004, 7.401486830834377e-17, 0.0],
            [0.7499999999999993, -1.2990381056766587, 0.0],
            [-0.7500000000000006, -1.2990381056766578, 0.0],
            [-1.5, 2.5771188818044677e-16, 0.0],
            [-0.7499999999999996, 1.2990381056766582, 0.0],
            [0.7500000000000006, 1.299038105676658, 0.0],
            [3.0, 2.9605947323337506e-16, 0.0],
            [1.4999999999999996, -2.598076211353318, 0.0],
            [-1.5000000000000007, -2.598076211353315, 0.0],
            [-3.0, 2.9605947323337506e-16, 0.0],
            [-1.4999999999999998, 2.598076211353316, 0.0],
            [1.5000000000000007, 2.598076211353316, 0.0],
        ]

        # case 1
        coordinates = self.benzene.struct2D(self.benzene.rdmol)
        assert coordinates == ref_benzene

        # case 2
        coordinates = self.benzene.struct2D()

        assert coordinates == ref_benzene

    def test_struct3D(self):

        benzene = Mol().from_mol(self.mol_file_benzene)
        cyclohexane = Mol().from_mol(self.mol_file_cyclohexane)

        ref_benzene1 = [
            [-1.3712089464302661, 0.23126052622861132, 0.10884850900438015],
            [-0.8888027850636476, -1.0747132970907136, 0.023662096407752145],
            [0.4824051332545418, -1.3059736176428844, -0.08518510219412999],
            [1.3712080855321414, -0.2312606236019202, -0.10884722677965643],
            [0.8888026432071641, 1.074712767874965, -0.02365936276924703],
            [-0.4824051851007865, 1.3059734711906823, 0.08518635603706522],
            [-2.439538610360146, 0.4114380260192637, 0.19364975232598391],
            [-1.5812821006522773, -1.9120394998351589, 0.04209102093170759],
            [0.8582543364764982, -2.3234767649406107, -0.15155946496063324],
            [2.439536719905402, -0.4114380647510738, -0.1936530953662202],
            [1.5812819452281086, 1.9120384735028368, -0.04209234874839749],
            [-0.858251235996675, 2.3234786030459773, 0.15155886611138783],
        ]
        ref_benzene2 = [
            [-0.010992221083817958, -1.3942938225848127, 0.0369202923201989],
            [-1.2130131536286053, -0.6884565632086695, -0.012865535167129486],
            [-1.2020206014221246, 0.7058369103419829, -0.04979603029602379],
            [0.010992882995460843, 1.3942933176553562, -0.03694035474979352],
            [1.213014002466435, 0.6884561424263546, 0.012845261835274537],
            [1.2020214436444454, -0.7058375296888078, 0.049776006461011914],
            [-0.01955770127631584, -2.480608562690211, 0.06571308110301495],
            [-2.158091006463371, -1.2248426188868105, -0.022860780525168236],
            [-2.13853398121529, 1.2557656562721673, -0.08856576273822289],
            [0.019556213127864604, 2.480609130852702, -0.06569283270250681],
            [2.1580906041520302, 1.2248437890743664, 0.022880918423080706],
            [2.1385335187033685, -1.255765849563742, 0.0885857360363162],
        ]
        ref_cyclohexane = [
            [1.1522619516505666, -0.03433183371158415, -0.8725751519134893],
            [0.4987601288082207, -1.351737228186331, -0.44977254332055755],
            [-0.7084704898621673, -1.168414474709224, 0.4723829932129046],
            [-1.4210250592955531, 0.1529243846403719, 0.2181150509861592],
            [-0.4987633894763803, 1.351737883267987, 0.44976618030745596],
            [0.9772364207719398, 1.0498207155411716, 0.18208280654135084],
            [0.7050732048747024, 0.30657679821867617, -1.8149689153991215],
            [2.216394592796534, -0.2001798573708924, -1.0751416982910058],
            [1.2355036894883715, -1.985327470985534, 0.058921814550401054],
            [0.19771290201274877, -1.898982179792319, -1.3513768386320373],
            [-1.4021660921882475, -2.0065184955119477, 0.34091337680368733],
            [-0.3751125275510685, -1.2007887888589106, 1.5174307882350122],
            [-2.30435587635474, 0.23899253609319487, 0.8609482907615041],
            [-1.7858193961564068, 0.17030769302385357, -0.8167388696492388],
            [-0.830775679816753, 2.178323564280585, -0.19017326041303212],
            [-0.6024552133581836, 1.7059904544593854, 1.4826025340943558],
            [1.4558652758231074, 0.7239045845177715, 1.114281583602595],
            [1.4901355578333384, 1.967701715083781, -0.12669814147696204],
        ]

        # case 1
        coordinates = benzene.struct3D(benzene.rdmol)
        assert coordinates == ref_benzene1

        # case 2
        coordinates = benzene.struct3D()
        assert coordinates == ref_benzene2

        # case 3
        coordinates = cyclohexane.struct3D()
        assert coordinates == ref_cyclohexane
