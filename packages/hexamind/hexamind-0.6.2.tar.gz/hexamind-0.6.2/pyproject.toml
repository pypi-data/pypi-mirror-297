[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hexamind"
dynamic = ["version"]
description = "Hexamind library to implement RAG solutions"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Julien Fresnel", email = "julien.fresnel@hexamind.ai"},
    {name = "Max Beales", email = "max.beales@hexamind.ai"},
    {name = "Alexandre Fleutelot", email = "alexandre.fleutelot@hexamind.ai"},
    {name = "Quentin Fever", email = "quentin.fever@hexamind.ai"},
    {name = "Louis Mucha", email = "louis.mucha@hexamind.ai"},
    {name = "Yves Peligry", email = "yves.peligry@hexamind.ai"},
]
dependencies = [
    "beautifulsoup4==4.12.3",
    "chromadb==0.5.0",
    "elasticsearch==8.12.1",
    "graphviz==0.20.3",
    "mammoth==1.8.0",
    "mistralai==0.4.1",
    "mistral_common==1.3.4",
    "openai==1.34.0",
    "pytest==8.2.2",
    "python_docx==1.1.0",
    "Requests==2.32.3",
    "Markdown==3.6",
    "setuptools==68.2.2",
    "pydantic",
    "sentence_transformers",
    "stanza",
    "cohere",
    "numpy",
]

[project.optional-dependencies]
test = [
    "pytest>=8.2.2",
    "pytest-cov",
]

[project.scripts]
hexamind-env = "hexamind.cli:main"

[tool.setuptools.dynamic]
version = {attr = "hexamind.__version__"}

[tool.setuptools.packages.find]
include = ["hexamind*"]
exclude = ["branding*", "tutorials*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=hexamind --cov-report=term-missing --cov-config=.coveragerc"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["hexamind"]