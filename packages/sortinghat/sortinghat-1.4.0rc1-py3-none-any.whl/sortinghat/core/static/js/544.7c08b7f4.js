"use strict";(self["webpackChunksortinghat_ui"]=self["webpackChunksortinghat_ui"]||[]).push([[544],{25544:(e,t,l)=>{l.r(t),l.d(t,{default:()=>C});var n=l(20641),a=l(4189),d=l(91606),i=l(30697),u=l(98477),r=(0,n.Lk)("p",{class:"subtitle-2"},"Search by term",-1),o=(0,n.Lk)("p",null,[(0,n.eW)(" You can find individuals whose identities contain a particular term in their name, email address or username by entering the term on the search box. You can combine this query with any filters, for example "),(0,n.Lk)("code",null,"John lastUpdated:>2020-11-01"),(0,n.eW)(". ")],-1),s=(0,n.Lk)("p",{class:"subtitle-2"},"Filter by last updated date",-1),c=(0,n.Lk)("p",null,[(0,n.eW)(" You can filter individuals based on when they were modified, using the "),(0,n.Lk)("code",null,"lastUpdated"),(0,n.eW)(" filter. ")],-1),h=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",{class:"text-left",width:"30%"},"Filter"),(0,n.Lk)("th",{class:"text-left"},"Explanation")])],-1),k=(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"lastUpdated:>YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were updated after the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"lastUpdated:>=YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were updated on or after the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"lastUpdated:<YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were updated before the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"lastUpdated:<=YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were updated on or before the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"lastUpdated:YYYY-MM-DD..YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were updated between the given dates. ")])],-1),L=(0,n.Lk)("p",{class:"subtitle-2 mt-8"},"Search for bots",-1),f=(0,n.Lk)("p",null,[(0,n.eW)(" You can search for individuals based on whether they are marked as bots, using the "),(0,n.Lk)("code",null,"isBot:true"),(0,n.eW)(" and "),(0,n.Lk)("code",null,"isBot:false"),(0,n.eW)(" filters. ")],-1),p=(0,n.Lk)("p",{class:"subtitle-2 mt-8"},"Filter by gender",-1),b=(0,n.Lk)("p",null,[(0,n.eW)(" You can search for individuals based on their gender, using the "),(0,n.Lk)("code",null,"gender"),(0,n.eW)(" filter. Genders that include spaces should be wrapped in double quotes. For example: "),(0,n.Lk)("code",null,'gender:"non binary"'),(0,n.eW)(". ")],-1),Y=(0,n.Lk)("p",{class:"subtitle-2 mt-6"},"Filter by country",-1),m=(0,n.Lk)("p",null,[(0,n.eW)(" You can filter individuals based on their country using the "),(0,n.Lk)("code",null,"country"),(0,n.eW)(" filter. ")],-1),w=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",{class:"text-left",width:"30%"},"Filter"),(0,n.Lk)("th",{class:"text-left"},"Explanation")])],-1),v=(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"country:name")]),(0,n.Lk)("td",null,[(0,n.eW)(" Matches individuals from the given country. Country names that include spaces should be wrapped in double quotes. For example: "),(0,n.Lk)("code",null,'country:"Dominican Republic"')])]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"country:code")]),(0,n.Lk)("td",null,[(0,n.eW)(" Matches individuals from a given country using ISO (Alpha-2 and Alpha-3) country codes. For example: "),(0,n.Lk)("code",null,"country:USA"),(0,n.eW)(". ")])])],-1),g=(0,n.Lk)("p",{class:"subtitle-2 mt-8"},"Filter by data source",-1),M=(0,n.Lk)("p",null,[(0,n.eW)(" You can search for individuals based on the data source of their identities, using the "),(0,n.Lk)("code",null,"source"),(0,n.eW)(" filter. Source names that include spaces should be wrapped between double quotes. For example: "),(0,n.Lk)("code",null,'source:"Stack Exchange"'),(0,n.eW)(". ")],-1),y=(0,n.Lk)("p",{class:"subtitle-2 mt-8"},"Filter by enrollment",-1),D=(0,n.Lk)("p",null,[(0,n.eW)(" You can search for individuals based on the organizations they are enrolled in, using the "),(0,n.Lk)("code",null,"enrollment"),(0,n.eW)(" filter. Organizations that include spaces should be wrapped between double quotes. For example: "),(0,n.Lk)("code",null,'enrollment:"Dumbledore\'s Army"'),(0,n.eW)(". ")],-1),W=(0,n.Lk)("p",{class:"subtitle-2"},"Filter by enrollment date",-1),x=(0,n.Lk)("p",null,[(0,n.eW)(" You can filter individuals based on when they were affiliated to an organization, using the "),(0,n.Lk)("code",null,"enrollmentDate"),(0,n.eW)(" filter. ")],-1),F=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th",{class:"text-left",width:"30%"},"Filter"),(0,n.Lk)("th",{class:"text-left"},"Explanation")])],-1),_=(0,n.Lk)("tbody",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"enrollmentDate:>YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were affiliated to an organization after the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"enrollmentDate:>=YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were affiliated to an organization on or after the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"enrollmentDate:<YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were affiliated to an organization before the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"enrollmentDate:<=YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were affiliated to an organization on or before the given date. ")]),(0,n.Lk)("tr",null,[(0,n.Lk)("td",{width:"30%"},[(0,n.Lk)("code",null,"enrollmentDate:YYYY-MM-DD..YYYY-MM-DD")]),(0,n.Lk)("td",null," Matches individuals that were affiliated to an organization between the given dates. ")])],-1),z=(0,n.Lk)("p",{class:"subtitle-2 mt-8"},"Filter by enrollment status",-1),S=(0,n.Lk)("p",null,[(0,n.eW)(" You can search for individuals based on whether they have any affiliation, using the "),(0,n.Lk)("code",null,"isEnrolled:true"),(0,n.eW)(" and "),(0,n.Lk)("code",null,"isEnrolled:false"),(0,n.eW)(" filters. ")],-1);function U(e,t,l,U,E,q){var A=(0,n.g2)("v-simple-table");return(0,n.uX)(),(0,n.Wv)(u.Y,null,{default:(0,n.k6)((function(){return[(0,n.bF)(a.J,{class:"mx-auto elevation-0 mt-6 section","max-width":"800px"},{default:(0,n.k6)((function(){return[(0,n.bF)(d.r,{class:"header"},{default:(0,n.k6)((function(){return[(0,n.eW)(" Search syntax ")]})),_:1}),(0,n.bF)(i.O,{class:"pa-8"},{default:(0,n.k6)((function(){return[r,o,s,c,(0,n.bF)(A,null,{default:(0,n.k6)((function(){return[h,k]})),_:1}),L,f,p,b,Y,m,(0,n.bF)(A,null,{default:(0,n.k6)((function(){return[w,v]})),_:1}),g,M,y,D,W,x,(0,n.bF)(A,null,{default:(0,n.k6)((function(){return[F,_]})),_:1}),z,S]})),_:1})]})),_:1})]})),_:1})}const E={name:"SearchHelp"};var q=l(64621);const A=(0,q.A)(E,[["render",U]]),C=A}}]);
//# sourceMappingURL=544.7c08b7f4.js.map