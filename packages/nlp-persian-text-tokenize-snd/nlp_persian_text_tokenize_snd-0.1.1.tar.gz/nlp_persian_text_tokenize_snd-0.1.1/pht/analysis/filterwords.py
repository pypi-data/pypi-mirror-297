import re
from date_normalization.datenormalization import DateNormalization
from .verbsremover import VerbsRemover


class FilterWords:
    _stop_words = (
        # حروف اضافه
        'از', 'به', 'در', 'با', 'برای', 'تا', 'بر', 'جز', 'طرف', 'مورد', 'بین', 'سوی', 'پایین', 'بالا', 'خارج', 'داخل',
        'بی', 'کنار', 'زیر', 'پیش', 'پس', 'روی', 'این', 'کلمه', 'که', 'حال', 'نسبت', 'روبه‌روی', 'پشت', 'جلو', 'همراه',
        'بدون', 'نزد', 'مقابل', 'میان', 'قبال', 'برابر', 'هنگام', 'علت', 'موجب', 'خاطر', 'طبق', 'اثر', 'درباره',
        'دربار', 'وسیله', 'دور', 'نزدیک', 'مطابق', 'موازات', 'علاوه', 'صورت', 'طول', 'عرض', 'خلال', 'همزمان', 'خلاف', 'ضد',
        'اساس', 'لحاظ', 'حین', 'طی', 'تحت', 'تدریج', 'طریق', 'علی‌رغم', 'پیش', 'دنبال', 'می',

        # حروف ربط
        'و', 'یا', 'اما', 'اگر', 'چون', 'بنابراین', 'وگرنه', 'اینکه', 'طوری', 'همچنین', 'گرچه', 'هرچند', 'چنانچه',
        'شرطی', 'شرط', 'ولی', 'زیرا', 'بلکه', 'تا', 'حتی', 'اگرچه', 'مگر', 'پس', 'لذا', 'خواه', 'نه', 'چونکه', 'زیراکه',
        'بشرطی', 'همانطور', 'همانگونه', 'همچنان',

        # حروف تعجبی
        'آه', 'وای', 'اَه', 'خوب', 'عجب', 'روش', 'اه',

        # فعل‌های عمومی
        'بود', 'است', 'بوده', 'می‌شود', 'نمی‌شود', 'کرد', 'می‌کند', 'نخواهد', 'خواهد', 'داشت', 'داشتند', 'هستم',

        # ضمیرهای شخصی و ملکی
        'من', 'تو', 'او', 'ما', 'شما', 'آنها', 'خود', 'ایشان', 'منم', 'توی', 'آن',

        # قیدهای عمومی
        'خیلی', 'نیز', 'فقط', 'کلی', 'خوبی', 'تقریباً', 'حتی', 'همیشه', 'هرگز', 'طور', 'کل', 'احتمالاً', 'شاید',
        'معمول', 'یکباره', 'سریع', 'احتمالا', 'بطور', 'یکبار',

        # حروف و عبارات سوالی
        'چه', 'کی', 'کجا', 'چرا', 'چگونه', 'چند',

        # قیدهای زمانی و مکانی
        'اکنون', 'امروز', 'دیروز', 'فردا', 'بعداً', 'روز', 'حاضر', 'شب',

        # عبارات عمومی
        'می‌رسد', 'دلیل', 'وجود', 'حالی', 'آنجا', 'نظر', 'کارآمد',

        # عوامل کثرت و تفکیک
        'برخی', 'بعضی', 'تمام', 'هر', 'یک', 'دو', 'سه', 'چهار', 'پنج', 'شش', 'هفت', 'هشت', 'نه', 'ده'
    )

    def __init__(self, text: str):
        self.content = text

    def get_filtered_words(self) -> list:
        date_normalization = DateNormalization()
        self.content = date_normalization.normalization_text(self.content)
        self._clean_content()
        self._remove_additional_words()
        self.content = (VerbsRemover(self.content)).filter_verbs()

        print(self.content)

        return self.content.split()

    def _clean_content(self):
        pattern = re.compile(r'[^\w\s\u0600-\u06FF]')
        self.content = pattern.sub('', self.content)

    def _remove_additional_words(self):
        text_words = self.content.split()
        words = []
        if len(text_words):
            for text_word in text_words:
                if text_word not in self._stop_words:
                    words.append(text_word)
        self.content = " ".join(words)
