# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import datetime as dt
import typing
from .session_event_response import SessionEventResponse
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SessionResponse(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for the Session.
    """

    created_at: dt.datetime
    updated_at: dt.datetime
    first_inputs: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Inputs for the first datapoint in the session.
    """

    last_output: typing.Optional[str] = pydantic.Field(default=None)
    """
    Output for the last datapoint in the session.
    """

    logs_count: int = pydantic.Field()
    """
    Number of logs associated to this session.
    """

    events: typing.List[SessionEventResponse] = pydantic.Field()
    """
    List of events associated with this Session.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
