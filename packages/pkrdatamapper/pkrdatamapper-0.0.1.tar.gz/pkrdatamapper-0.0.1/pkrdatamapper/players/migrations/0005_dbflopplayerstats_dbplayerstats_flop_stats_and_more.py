# Generated by Django 5.1.1 on 2024-09-17 10:06

import django.db.models.deletion
import pkrdatamapper.common.mixins
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("players", "0004_dbgeneralplayerstats_dbplayerstats_general_stats_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DBFlopPlayerStats",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cnt_saw",
                    models.PositiveIntegerField(
                        db_column="cnt_saw",
                        db_comment="Count of hands where  player saw the street",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_to_talk",
                    models.PositiveIntegerField(
                        db_column="cnt_first_to_talk",
                        db_comment="Count of hands where  player was the first to talk ",
                        default=0,
                    ),
                ),
                (
                    "cnt_has_position",
                    models.PositiveIntegerField(
                        db_column="cnt_has_position",
                        db_comment="Count of hands where  player had position ",
                        default=0,
                    ),
                ),
                (
                    "cnt_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_bet",
                        db_comment="Count of hands where  player bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_open_opportunity",
                        db_comment="Count of hands where  player had the opportunity to open ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open",
                    models.PositiveIntegerField(
                        db_column="cnt_open",
                        db_comment="Count of hands where  player opened ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a c-bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet",
                        db_comment="Count of hands where  player made a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_cbet",
                        db_comment="Count of hands where  player faced a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet",
                        db_comment="Count of hands where  player made a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_donk_bet",
                        db_comment="Count of hands where  player faced a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_first_raise",
                        db_comment="Count of hands where  player made the first raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_fold",
                    models.PositiveIntegerField(
                        db_column="cnt_fold",
                        db_comment="Count of hands where  player folded ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check",
                    models.PositiveIntegerField(
                        db_column="cnt_check",
                        db_comment="Count of hands where  player checked ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_check_raise",
                        db_comment="Count of hands where  player check-raised ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_face_raise",
                        db_comment="Count of hands where  player faced a raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet",
                        db_comment="Count of hands where  player 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_3bet",
                        db_comment="Count of hands where  player faced a 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet",
                        db_comment="Count of hands where  player 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_4bet",
                        db_comment="Count of hands where  player faced a 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="players.dbplayer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Flop Player Stats",
                "db_table": "flop_player_stats",
            },
            bases=(models.Model, pkrdatamapper.common.mixins.DFDataMixin),
        ),
        migrations.AddField(
            model_name="dbplayerstats",
            name="flop_stats",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="players.dbflopplayerstats",
            ),
        ),
        migrations.CreateModel(
            name="DBRiverPlayerStats",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cnt_saw",
                    models.PositiveIntegerField(
                        db_column="cnt_saw",
                        db_comment="Count of hands where  player saw the street",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_to_talk",
                    models.PositiveIntegerField(
                        db_column="cnt_first_to_talk",
                        db_comment="Count of hands where  player was the first to talk ",
                        default=0,
                    ),
                ),
                (
                    "cnt_has_position",
                    models.PositiveIntegerField(
                        db_column="cnt_has_position",
                        db_comment="Count of hands where  player had position ",
                        default=0,
                    ),
                ),
                (
                    "cnt_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_bet",
                        db_comment="Count of hands where  player bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_open_opportunity",
                        db_comment="Count of hands where  player had the opportunity to open ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open",
                    models.PositiveIntegerField(
                        db_column="cnt_open",
                        db_comment="Count of hands where  player opened ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a c-bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet",
                        db_comment="Count of hands where  player made a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_cbet",
                        db_comment="Count of hands where  player faced a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet",
                        db_comment="Count of hands where  player made a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_donk_bet",
                        db_comment="Count of hands where  player faced a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_first_raise",
                        db_comment="Count of hands where  player made the first raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_fold",
                    models.PositiveIntegerField(
                        db_column="cnt_fold",
                        db_comment="Count of hands where  player folded ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check",
                    models.PositiveIntegerField(
                        db_column="cnt_check",
                        db_comment="Count of hands where  player checked ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_check_raise",
                        db_comment="Count of hands where  player check-raised ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_face_raise",
                        db_comment="Count of hands where  player faced a raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet",
                        db_comment="Count of hands where  player 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_3bet",
                        db_comment="Count of hands where  player faced a 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet",
                        db_comment="Count of hands where  player 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_4bet",
                        db_comment="Count of hands where  player faced a 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="players.dbplayer",
                    ),
                ),
            ],
            options={
                "verbose_name": "River Player Stats",
                "db_table": "river_player_stats",
            },
            bases=(models.Model, pkrdatamapper.common.mixins.DFDataMixin),
        ),
        migrations.AddField(
            model_name="dbplayerstats",
            name="river_stats",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="players.dbriverplayerstats",
            ),
        ),
        migrations.CreateModel(
            name="DBTurnPlayerStats",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cnt_saw",
                    models.PositiveIntegerField(
                        db_column="cnt_saw",
                        db_comment="Count of hands where  player saw the street",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_to_talk",
                    models.PositiveIntegerField(
                        db_column="cnt_first_to_talk",
                        db_comment="Count of hands where  player was the first to talk ",
                        default=0,
                    ),
                ),
                (
                    "cnt_has_position",
                    models.PositiveIntegerField(
                        db_column="cnt_has_position",
                        db_comment="Count of hands where  player had position ",
                        default=0,
                    ),
                ),
                (
                    "cnt_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_bet",
                        db_comment="Count of hands where  player bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_open_opportunity",
                        db_comment="Count of hands where  player had the opportunity to open ",
                        default=0,
                    ),
                ),
                (
                    "cnt_open",
                    models.PositiveIntegerField(
                        db_column="cnt_open",
                        db_comment="Count of hands where  player opened ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a c-bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_cbet",
                        db_comment="Count of hands where  player made a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_cbet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_cbet",
                        db_comment="Count of hands where  player faced a continuation bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to make a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_donk_bet",
                        db_comment="Count of hands where  player made a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_donk_bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_donk_bet",
                        db_comment="Count of hands where  player faced a donk bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_first_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_first_raise",
                        db_comment="Count of hands where  player made the first raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_fold",
                    models.PositiveIntegerField(
                        db_column="cnt_fold",
                        db_comment="Count of hands where  player folded ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check",
                    models.PositiveIntegerField(
                        db_column="cnt_check",
                        db_comment="Count of hands where  player checked ",
                        default=0,
                    ),
                ),
                (
                    "cnt_check_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_check_raise",
                        db_comment="Count of hands where  player check-raised ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_raise",
                    models.PositiveIntegerField(
                        db_column="cnt_face_raise",
                        db_comment="Count of hands where  player faced a raise ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_3bet",
                        db_comment="Count of hands where  player 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_3bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_3bet",
                        db_comment="Count of hands where  player faced a 3bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet_opportunity",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet_opportunity",
                        db_comment="Count of hands where  player had the opportunity to 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_4bet",
                        db_comment="Count of hands where  player 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "cnt_face_4bet",
                    models.PositiveIntegerField(
                        db_column="cnt_face_4bet",
                        db_comment="Count of hands where  player faced a 4+bet ",
                        default=0,
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="players.dbplayer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Turn Player Stats",
                "db_table": "turn_player_stats",
            },
            bases=(models.Model, pkrdatamapper.common.mixins.DFDataMixin),
        ),
        migrations.AddField(
            model_name="dbplayerstats",
            name="turn_stats",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="players.dbturnplayerstats",
            ),
        ),
    ]
