# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from toc_trade_pb.forwarder import trade_pb2 as forwarder_dot_trade__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in forwarder/trade_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TradeInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CancelOrder = channel.unary_unary(
                '/forwarder.TradeInterface/CancelOrder',
                request_serializer=forwarder_dot_trade__pb2.OrderID.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.BuyStock = channel.unary_unary(
                '/forwarder.TradeInterface/BuyStock',
                request_serializer=forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellStock = channel.unary_unary(
                '/forwarder.TradeInterface/SellStock',
                request_serializer=forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.BuyOddStock = channel.unary_unary(
                '/forwarder.TradeInterface/BuyOddStock',
                request_serializer=forwarder_dot_trade__pb2.OddStockOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellOddStock = channel.unary_unary(
                '/forwarder.TradeInterface/SellOddStock',
                request_serializer=forwarder_dot_trade__pb2.OddStockOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellFirstStock = channel.unary_unary(
                '/forwarder.TradeInterface/SellFirstStock',
                request_serializer=forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.BuyFuture = channel.unary_unary(
                '/forwarder.TradeInterface/BuyFuture',
                request_serializer=forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellFuture = channel.unary_unary(
                '/forwarder.TradeInterface/SellFuture',
                request_serializer=forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellFirstFuture = channel.unary_unary(
                '/forwarder.TradeInterface/SellFirstFuture',
                request_serializer=forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.BuyOption = channel.unary_unary(
                '/forwarder.TradeInterface/BuyOption',
                request_serializer=forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellOption = channel.unary_unary(
                '/forwarder.TradeInterface/SellOption',
                request_serializer=forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.SellFirstOption = channel.unary_unary(
                '/forwarder.TradeInterface/SellFirstOption',
                request_serializer=forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.TradeResult.FromString,
                _registered_method=True)
        self.GetLocalOrderStatusArr = channel.unary_unary(
                '/forwarder.TradeInterface/GetLocalOrderStatusArr',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetSimulateOrderStatusArr = channel.unary_unary(
                '/forwarder.TradeInterface/GetSimulateOrderStatusArr',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetFuturePosition = channel.unary_unary(
                '/forwarder.TradeInterface/GetFuturePosition',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.FuturePositionArr.FromString,
                _registered_method=True)
        self.GetStockPosition = channel.unary_unary(
                '/forwarder.TradeInterface/GetStockPosition',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.StockPositionArr.FromString,
                _registered_method=True)
        self.GetSettlement = channel.unary_unary(
                '/forwarder.TradeInterface/GetSettlement',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.SettlementList.FromString,
                _registered_method=True)
        self.GetAccountBalance = channel.unary_unary(
                '/forwarder.TradeInterface/GetAccountBalance',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.AccountBalance.FromString,
                _registered_method=True)
        self.GetMargin = channel.unary_unary(
                '/forwarder.TradeInterface/GetMargin',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_trade__pb2.Margin.FromString,
                _registered_method=True)


class TradeInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyOddStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellOddStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyFuture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFuture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstFuture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyOption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellOption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstOption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocalOrderStatusArr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimulateOrderStatusArr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFuturePosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStockPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettlement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMargin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TradeInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=forwarder_dot_trade__pb2.OrderID.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyStock': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyStock,
                    request_deserializer=forwarder_dot_trade__pb2.StockOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellStock': grpc.unary_unary_rpc_method_handler(
                    servicer.SellStock,
                    request_deserializer=forwarder_dot_trade__pb2.StockOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyOddStock': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyOddStock,
                    request_deserializer=forwarder_dot_trade__pb2.OddStockOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellOddStock': grpc.unary_unary_rpc_method_handler(
                    servicer.SellOddStock,
                    request_deserializer=forwarder_dot_trade__pb2.OddStockOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstStock': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstStock,
                    request_deserializer=forwarder_dot_trade__pb2.StockOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyFuture,
                    request_deserializer=forwarder_dot_trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFuture,
                    request_deserializer=forwarder_dot_trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstFuture,
                    request_deserializer=forwarder_dot_trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyOption': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyOption,
                    request_deserializer=forwarder_dot_trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellOption': grpc.unary_unary_rpc_method_handler(
                    servicer.SellOption,
                    request_deserializer=forwarder_dot_trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstOption': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstOption,
                    request_deserializer=forwarder_dot_trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=forwarder_dot_trade__pb2.TradeResult.SerializeToString,
            ),
            'GetLocalOrderStatusArr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocalOrderStatusArr,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetSimulateOrderStatusArr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimulateOrderStatusArr,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetFuturePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFuturePosition,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_trade__pb2.FuturePositionArr.SerializeToString,
            ),
            'GetStockPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStockPosition,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_trade__pb2.StockPositionArr.SerializeToString,
            ),
            'GetSettlement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettlement,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_trade__pb2.SettlementList.SerializeToString,
            ),
            'GetAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalance,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_trade__pb2.AccountBalance.SerializeToString,
            ),
            'GetMargin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMargin,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_trade__pb2.Margin.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'forwarder.TradeInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('forwarder.TradeInterface', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TradeInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/CancelOrder',
            forwarder_dot_trade__pb2.OrderID.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BuyStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/BuyStock',
            forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellStock',
            forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BuyOddStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/BuyOddStock',
            forwarder_dot_trade__pb2.OddStockOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellOddStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellOddStock',
            forwarder_dot_trade__pb2.OddStockOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellFirstStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellFirstStock',
            forwarder_dot_trade__pb2.StockOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BuyFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/BuyFuture',
            forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellFuture',
            forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellFirstFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellFirstFuture',
            forwarder_dot_trade__pb2.FutureOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BuyOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/BuyOption',
            forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellOption',
            forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellFirstOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/SellFirstOption',
            forwarder_dot_trade__pb2.OptionOrderDetail.SerializeToString,
            forwarder_dot_trade__pb2.TradeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLocalOrderStatusArr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetLocalOrderStatusArr',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSimulateOrderStatusArr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetSimulateOrderStatusArr',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFuturePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetFuturePosition',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_trade__pb2.FuturePositionArr.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStockPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetStockPosition',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_trade__pb2.StockPositionArr.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSettlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetSettlement',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_trade__pb2.SettlementList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetAccountBalance',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_trade__pb2.AccountBalance.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMargin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.TradeInterface/GetMargin',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_trade__pb2.Margin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
