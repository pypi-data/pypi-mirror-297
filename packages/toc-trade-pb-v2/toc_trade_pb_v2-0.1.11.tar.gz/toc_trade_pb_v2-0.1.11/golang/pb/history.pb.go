// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: forwarder/history.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockNumArrWithDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockNumArr []string `protobuf:"bytes,1,rep,name=stock_num_arr,json=stockNumArr,proto3" json:"stock_num_arr,omitempty"`
	Date        string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *StockNumArrWithDate) Reset() {
	*x = StockNumArrWithDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockNumArrWithDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockNumArrWithDate) ProtoMessage() {}

func (x *StockNumArrWithDate) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockNumArrWithDate.ProtoReflect.Descriptor instead.
func (*StockNumArrWithDate) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{0}
}

func (x *StockNumArrWithDate) GetStockNumArr() []string {
	if x != nil {
		return x.StockNumArr
	}
	return nil
}

func (x *StockNumArrWithDate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type FutureCodeArrWithDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FutureCodeArr []string `protobuf:"bytes,1,rep,name=future_code_arr,json=futureCodeArr,proto3" json:"future_code_arr,omitempty"`
	Date          string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *FutureCodeArrWithDate) Reset() {
	*x = FutureCodeArrWithDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FutureCodeArrWithDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureCodeArrWithDate) ProtoMessage() {}

func (x *FutureCodeArrWithDate) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureCodeArrWithDate.ProtoReflect.Descriptor instead.
func (*FutureCodeArrWithDate) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{1}
}

func (x *FutureCodeArrWithDate) GetFutureCodeArr() []string {
	if x != nil {
		return x.FutureCodeArr
	}
	return nil
}

func (x *FutureCodeArrWithDate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type StockNumArrWithDateArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockNumArr []string `protobuf:"bytes,1,rep,name=stock_num_arr,json=stockNumArr,proto3" json:"stock_num_arr,omitempty"`
	DateArr     []string `protobuf:"bytes,2,rep,name=date_arr,json=dateArr,proto3" json:"date_arr,omitempty"`
}

func (x *StockNumArrWithDateArr) Reset() {
	*x = StockNumArrWithDateArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockNumArrWithDateArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockNumArrWithDateArr) ProtoMessage() {}

func (x *StockNumArrWithDateArr) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockNumArrWithDateArr.ProtoReflect.Descriptor instead.
func (*StockNumArrWithDateArr) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{2}
}

func (x *StockNumArrWithDateArr) GetStockNumArr() []string {
	if x != nil {
		return x.StockNumArr
	}
	return nil
}

func (x *StockNumArrWithDateArr) GetDateArr() []string {
	if x != nil {
		return x.DateArr
	}
	return nil
}

type HistoryTickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*HistoryTickMessage `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoryTickResponse) Reset() {
	*x = HistoryTickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTickResponse) ProtoMessage() {}

func (x *HistoryTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTickResponse.ProtoReflect.Descriptor instead.
func (*HistoryTickResponse) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{3}
}

func (x *HistoryTickResponse) GetData() []*HistoryTickMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryKbarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*HistoryKbarMessage `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoryKbarResponse) Reset() {
	*x = HistoryKbarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryKbarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryKbarResponse) ProtoMessage() {}

func (x *HistoryKbarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryKbarResponse.ProtoReflect.Descriptor instead.
func (*HistoryKbarResponse) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{4}
}

func (x *HistoryKbarResponse) GetData() []*HistoryKbarMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*HistoryCloseMessage `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoryCloseResponse) Reset() {
	*x = HistoryCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryCloseResponse) ProtoMessage() {}

func (x *HistoryCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryCloseResponse.ProtoReflect.Descriptor instead.
func (*HistoryCloseResponse) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryCloseResponse) GetData() []*HistoryCloseMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryTickMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        int64   `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Close     float64 `protobuf:"fixed64,2,opt,name=close,proto3" json:"close,omitempty"`
	Volume    int64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	BidPrice  float64 `protobuf:"fixed64,4,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`
	BidVolume int64   `protobuf:"varint,5,opt,name=bid_volume,json=bidVolume,proto3" json:"bid_volume,omitempty"`
	AskPrice  float64 `protobuf:"fixed64,6,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	AskVolume int64   `protobuf:"varint,7,opt,name=ask_volume,json=askVolume,proto3" json:"ask_volume,omitempty"`
	TickType  int64   `protobuf:"varint,8,opt,name=tick_type,json=tickType,proto3" json:"tick_type,omitempty"`
	Code      string  `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *HistoryTickMessage) Reset() {
	*x = HistoryTickMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryTickMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTickMessage) ProtoMessage() {}

func (x *HistoryTickMessage) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTickMessage.ProtoReflect.Descriptor instead.
func (*HistoryTickMessage) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{6}
}

func (x *HistoryTickMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *HistoryTickMessage) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *HistoryTickMessage) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *HistoryTickMessage) GetBidPrice() float64 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

func (x *HistoryTickMessage) GetBidVolume() int64 {
	if x != nil {
		return x.BidVolume
	}
	return 0
}

func (x *HistoryTickMessage) GetAskPrice() float64 {
	if x != nil {
		return x.AskPrice
	}
	return 0
}

func (x *HistoryTickMessage) GetAskVolume() int64 {
	if x != nil {
		return x.AskVolume
	}
	return 0
}

func (x *HistoryTickMessage) GetTickType() int64 {
	if x != nil {
		return x.TickType
	}
	return 0
}

func (x *HistoryTickMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type HistoryKbarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts     int64   `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Close  float64 `protobuf:"fixed64,2,opt,name=close,proto3" json:"close,omitempty"`
	Open   float64 `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	High   float64 `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low    float64 `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Volume int64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Code   string  `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *HistoryKbarMessage) Reset() {
	*x = HistoryKbarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryKbarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryKbarMessage) ProtoMessage() {}

func (x *HistoryKbarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryKbarMessage.ProtoReflect.Descriptor instead.
func (*HistoryKbarMessage) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{7}
}

func (x *HistoryKbarMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *HistoryKbarMessage) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *HistoryKbarMessage) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *HistoryKbarMessage) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *HistoryKbarMessage) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *HistoryKbarMessage) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *HistoryKbarMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type HistoryCloseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Code  string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Close float64 `protobuf:"fixed64,3,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *HistoryCloseMessage) Reset() {
	*x = HistoryCloseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryCloseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryCloseMessage) ProtoMessage() {}

func (x *HistoryCloseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryCloseMessage.ProtoReflect.Descriptor instead.
func (*HistoryCloseMessage) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{8}
}

func (x *HistoryCloseMessage) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *HistoryCloseMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HistoryCloseMessage) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_forwarder_history_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_forwarder_history_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_forwarder_history_proto_rawDescGZIP(), []int{9}
}

func (x *Date) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

var File_forwarder_history_proto protoreflect.FileDescriptor

var file_forwarder_history_proto_rawDesc = []byte{
	0x0a, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x41, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x5f,
	0x61, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x22, 0x48, 0x0a, 0x13, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x13, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x14, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x69, 0x64, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x12, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x32, 0xff, 0x02, 0x0a, 0x14, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x12, 0x1e, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4b, 0x62, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61,
	0x72, 0x12, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x62, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_forwarder_history_proto_rawDescOnce sync.Once
	file_forwarder_history_proto_rawDescData = file_forwarder_history_proto_rawDesc
)

func file_forwarder_history_proto_rawDescGZIP() []byte {
	file_forwarder_history_proto_rawDescOnce.Do(func() {
		file_forwarder_history_proto_rawDescData = protoimpl.X.CompressGZIP(file_forwarder_history_proto_rawDescData)
	})
	return file_forwarder_history_proto_rawDescData
}

var file_forwarder_history_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_forwarder_history_proto_goTypes = []any{
	(*StockNumArrWithDate)(nil),    // 0: forwarder.StockNumArrWithDate
	(*FutureCodeArrWithDate)(nil),  // 1: forwarder.FutureCodeArrWithDate
	(*StockNumArrWithDateArr)(nil), // 2: forwarder.StockNumArrWithDateArr
	(*HistoryTickResponse)(nil),    // 3: forwarder.HistoryTickResponse
	(*HistoryKbarResponse)(nil),    // 4: forwarder.HistoryKbarResponse
	(*HistoryCloseResponse)(nil),   // 5: forwarder.HistoryCloseResponse
	(*HistoryTickMessage)(nil),     // 6: forwarder.HistoryTickMessage
	(*HistoryKbarMessage)(nil),     // 7: forwarder.HistoryKbarMessage
	(*HistoryCloseMessage)(nil),    // 8: forwarder.HistoryCloseMessage
	(*Date)(nil),                   // 9: forwarder.Date
}
var file_forwarder_history_proto_depIdxs = []int32{
	6, // 0: forwarder.HistoryTickResponse.data:type_name -> forwarder.HistoryTickMessage
	7, // 1: forwarder.HistoryKbarResponse.data:type_name -> forwarder.HistoryKbarMessage
	8, // 2: forwarder.HistoryCloseResponse.data:type_name -> forwarder.HistoryCloseMessage
	0, // 3: forwarder.HistoryDataInterface.GetStockHistoryTick:input_type -> forwarder.StockNumArrWithDate
	0, // 4: forwarder.HistoryDataInterface.GetStockHistoryKbar:input_type -> forwarder.StockNumArrWithDate
	0, // 5: forwarder.HistoryDataInterface.GetStockHistoryClose:input_type -> forwarder.StockNumArrWithDate
	1, // 6: forwarder.HistoryDataInterface.GetFutureHistoryKbar:input_type -> forwarder.FutureCodeArrWithDate
	3, // 7: forwarder.HistoryDataInterface.GetStockHistoryTick:output_type -> forwarder.HistoryTickResponse
	4, // 8: forwarder.HistoryDataInterface.GetStockHistoryKbar:output_type -> forwarder.HistoryKbarResponse
	5, // 9: forwarder.HistoryDataInterface.GetStockHistoryClose:output_type -> forwarder.HistoryCloseResponse
	4, // 10: forwarder.HistoryDataInterface.GetFutureHistoryKbar:output_type -> forwarder.HistoryKbarResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_forwarder_history_proto_init() }
func file_forwarder_history_proto_init() {
	if File_forwarder_history_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_forwarder_history_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StockNumArrWithDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FutureCodeArrWithDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StockNumArrWithDateArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryTickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryKbarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryTickMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryKbarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HistoryCloseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_forwarder_history_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_forwarder_history_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forwarder_history_proto_goTypes,
		DependencyIndexes: file_forwarder_history_proto_depIdxs,
		MessageInfos:      file_forwarder_history_proto_msgTypes,
	}.Build()
	File_forwarder_history_proto = out.File
	file_forwarder_history_proto_rawDesc = nil
	file_forwarder_history_proto_goTypes = nil
	file_forwarder_history_proto_depIdxs = nil
}
