# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from toc_trade_pb.forwarder import entity_pb2 as forwarder_dot_entity__pb2
from toc_trade_pb.forwarder import subscribe_pb2 as forwarder_dot_subscribe__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in forwarder/subscribe_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SubscribeDataInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeStockTick = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/SubscribeStockTick',
                request_serializer=forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.UnSubscribeStockTick = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeStockTick',
                request_serializer=forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.SubscribeStockBidAsk = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/SubscribeStockBidAsk',
                request_serializer=forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.UnSubscribeStockBidAsk = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeStockBidAsk',
                request_serializer=forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.SubscribeFutureTick = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/SubscribeFutureTick',
                request_serializer=forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.UnSubscribeFutureTick = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeFutureTick',
                request_serializer=forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.SubscribeFutureBidAsk = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/SubscribeFutureBidAsk',
                request_serializer=forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.UnSubscribeFutureBidAsk = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeFutureBidAsk',
                request_serializer=forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
                response_deserializer=forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
                _registered_method=True)
        self.UnSubscribeAllTick = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeAllTick',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_entity__pb2.ErrorMessage.FromString,
                _registered_method=True)
        self.UnSubscribeAllBidAsk = channel.unary_unary(
                '/forwarder.SubscribeDataInterface/UnSubscribeAllBidAsk',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=forwarder_dot_entity__pb2.ErrorMessage.FromString,
                _registered_method=True)


class SubscribeDataInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubscribeStockTick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeStockTick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStockBidAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeStockBidAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeFutureTick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeFutureTick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeFutureBidAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeFutureBidAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeAllTick(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnSubscribeAllBidAsk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubscribeDataInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeStockTick': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeStockTick,
                    request_deserializer=forwarder_dot_entity__pb2.StockNumArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnSubscribeStockTick': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeStockTick,
                    request_deserializer=forwarder_dot_entity__pb2.StockNumArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'SubscribeStockBidAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeStockBidAsk,
                    request_deserializer=forwarder_dot_entity__pb2.StockNumArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnSubscribeStockBidAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeStockBidAsk,
                    request_deserializer=forwarder_dot_entity__pb2.StockNumArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'SubscribeFutureTick': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeFutureTick,
                    request_deserializer=forwarder_dot_entity__pb2.FutureCodeArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnSubscribeFutureTick': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeFutureTick,
                    request_deserializer=forwarder_dot_entity__pb2.FutureCodeArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'SubscribeFutureBidAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeFutureBidAsk,
                    request_deserializer=forwarder_dot_entity__pb2.FutureCodeArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnSubscribeFutureBidAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeFutureBidAsk,
                    request_deserializer=forwarder_dot_entity__pb2.FutureCodeArr.FromString,
                    response_serializer=forwarder_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnSubscribeAllTick': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeAllTick,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_entity__pb2.ErrorMessage.SerializeToString,
            ),
            'UnSubscribeAllBidAsk': grpc.unary_unary_rpc_method_handler(
                    servicer.UnSubscribeAllBidAsk,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=forwarder_dot_entity__pb2.ErrorMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'forwarder.SubscribeDataInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('forwarder.SubscribeDataInterface', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SubscribeDataInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubscribeStockTick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/SubscribeStockTick',
            forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeStockTick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeStockTick',
            forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStockBidAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/SubscribeStockBidAsk',
            forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeStockBidAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeStockBidAsk',
            forwarder_dot_entity__pb2.StockNumArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeFutureTick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/SubscribeFutureTick',
            forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeFutureTick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeFutureTick',
            forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeFutureBidAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/SubscribeFutureBidAsk',
            forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeFutureBidAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeFutureBidAsk',
            forwarder_dot_entity__pb2.FutureCodeArr.SerializeToString,
            forwarder_dot_subscribe__pb2.SubscribeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeAllTick(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeAllTick',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_entity__pb2.ErrorMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnSubscribeAllBidAsk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forwarder.SubscribeDataInterface/UnSubscribeAllBidAsk',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            forwarder_dot_entity__pb2.ErrorMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
