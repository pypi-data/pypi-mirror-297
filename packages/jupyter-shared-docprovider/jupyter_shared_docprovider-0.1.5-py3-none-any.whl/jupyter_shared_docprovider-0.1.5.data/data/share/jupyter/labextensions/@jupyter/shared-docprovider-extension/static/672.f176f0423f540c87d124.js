"use strict";(self.webpackChunk_jupyter_shared_docprovider_extension=self.webpackChunk_jupyter_shared_docprovider_extension||[]).push([[672,291],{1672:(e,t,s)=>{s.r(t),s.d(t,{SharedDrive:()=>g,WebrtcProvider:()=>c});var r=s(7262),n=s(8482),i=s(4602),o=s(1473),a=s(2697),h=s(7354),l=s(2200);class c{constructor(e){this._onPeers=e=>{0===e.webrtcPeers.length&&(0,l.showErrorMessage)(this._trans.__("All clients disconnected"),`If you close '${this._path}', all data will be lost (unless someone reconnects).`,[l.Dialog.okButton()])},this._onSync=e=>{e.synced&&this._ready.resolve()},this._ready=new r.PromiseDelegate,this._isDisposed=!1,this._path=e.path,this._contentType=e.contentType,this._format=e.format,this._sharedModel=e.model,this._awareness=e.model.awareness,this._yWebrtcProvider=null,this._trans=e.translator,this._signalingServers=e.signalingServers;const t=e.user;t.ready.then((()=>{this._onUserChanged(t)})).catch((e=>console.error(e))),t.userChanged.connect(this._onUserChanged,this),this._connect().catch((e=>console.warn(e)))}get isDisposed(){return this._isDisposed}get ready(){return this._ready.promise}dispose(){var e;this.isDisposed||(this._isDisposed=!0,null===(e=this._yWebrtcProvider)||void 0===e||e.destroy(),i.Signal.clearData(this))}async _connect(){this._yWebrtcProvider=new n.WebrtcProvider(`${this._format}:${this._contentType}:${this._path}}`,this._sharedModel.ydoc,{signaling:this._signalingServers,awareness:this._awareness}),this._yWebrtcProvider.on("synced",this._onSync),this._yWebrtcProvider.on("peers",this._onPeers)}_onUserChanged(e){this._awareness.setLocalStateField("user",e.identity)}}class d{constructor(e){this._parts=e.split("/"),""===this._parts[this._parts.length-1]&&this._parts.pop()}get parts(){return this._parts}get parent(){return this._parts.slice(0,this._parts.length-1).join("/")}get name(){return this._parts[this._parts.length-1]}}var p=s(2206);class _{constructor(){this._ydoc=new p.Doc,this._yroot=this._ydoc.getMap("root")}get ydoc(){return this._ydoc}_newDir(){return new p.Map}isDir(e){return!!this.get(e)}get(e){if(""===e)return this._yroot;let t=this._yroot;const s=new d(e).parts;let r="";const n=s.length-1;for(let e=0;e<s.length;e++){const i=s[e];if(!t.has(i))throw new Error(`No entry "${i}" in "${r}"`);if(t=t.get(i),t)r=""===r?i:`${r}/${i}`;else if(e<n)throw new Error(`Entry "${i}" in "${r}" is not a directory.`)}return t}newUntitled(e,t,s){t=null!=t?t:"",s=null!=s?s:"";let r=0,n="";const i=this.get(t).toJSON();for(;""===n;){const e=`shared${r}${s}`;e in i?r+=1:n=e}const o=new d(t).parts;o.push(n);const a=o.join("/");return e?this.createDirectory(a):this.createFile(a),a}createFile(e){this.get(new d(e).parent).set(new d(e).name,null)}createDirectory(e){this.get(new d(e).parent).set(new d(e).name,this._newDir())}delete(e){if(0===new d(e).parts.length)throw new Error("Cannot delete root directory");this.get(new d(e).parent).delete(new d(e).name)}move(e,t){if(0===new d(e).parts.length)throw new Error("Cannot move root directory");if(0===new d(t).parts.length)throw new Error("Cannot move to root directory");const s=this.get(new d(e).parent),r=this.get(new d(t).parent);let n=s.get(new d(e).name);null!==n&&(n=n.clone()),this.delete(e),r.set(new d(t).name,n)}}const y=JSON.parse(o.PageConfig.getOption("signalingServers"));class g{constructor(e,t,s,a,l){this._onSync=e=>{var t;e.synced&&(this._ready.resolve(),null===(t=this._fileSystemProvider)||void 0===t||t.off("synced",this._onSync))},this._onCreate=e=>{if("string"!=typeof e.format)return this.sharedModelFactory.documentFactories.get(e.contentType)(e);this._ydrive.get(e.path);const t=`${e.format}:${e.contentType}:${e.path}`,s=this._fileProviders.get(t);if(s)return s.sharedModel;const r=this.sharedModelFactory.documentFactories.get(e.contentType)(e),n=new c({url:"",path:e.path,format:e.format,contentType:e.contentType,model:r,user:this._user,translator:this._trans,signalingServers:this._signalingServers});return this._fileProviders.set(t,{provider:n,sharedModel:r}),r.disposed.connect((()=>{const e=this._fileProviders.get(t);e&&(e.provider.dispose(),this._fileProviders.delete(t))})),r},this._fileChanged=new i.Signal(this),this._isDisposed=!1,this._ydrive=new _,this._ready=new r.PromiseDelegate,this._signalingServers=[],this._user=e,this._defaultFileBrowser=t,this._trans=s,this._globalAwareness=a,this._fileProviders=new Map,this.sharedModelFactory=new u(this._onCreate),this.serverSettings=h.ServerConnection.makeSettings(),y.forEach((e=>{e.startsWith("ws://")||e.startsWith("wss://")||e.startsWith("http://")||e.startsWith("https://")?this._signalingServers.push(e):this._signalingServers.push(o.URLExt.join(this.serverSettings.wsUrl,e))})),this.name=l,this._fileSystemProvider=new n.WebrtcProvider("fileSystem",this._ydrive.ydoc,{signaling:this._signalingServers,awareness:this._globalAwareness||void 0}),this._fileSystemProvider.on("synced",this._onSync)}get providers(){const e=new Map;for(const t in this._fileProviders)e.set(t,this._fileProviders.get(t).provider);return e}async getDownloadUrl(e){return""}async delete(e){this._ydrive.delete(e)}async restoreCheckpoint(e,t){}async deleteCheckpoint(e,t){}async importFile(e){const t=await this._defaultFileBrowser.model.manager.services.contents.get(e,{content:!0});this._ydrive.createFile(t.name);const s=this.sharedModelFactory.createNew({path:t.name,format:t.format,contentType:t.type,collaborative:!0});s&&(s instanceof a.YNotebook?s.fromJSON(t.content):s.setSource(t.content))}async newUntitled(e={}){var t;let s="",r=!1;"directory"===e.type?r=!0:s="notebook"===e.type?".ipynb":".txt";const n=this._ydrive.newUntitled(r,e.path,s),i={name:new d(n).name,path:n,type:null!==(t=e.type)&&void 0!==t?t:"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null};return this._fileChanged.emit({type:"new",oldValue:null,newValue:i}),i}async rename(e,t){return this._ydrive.move(e,t),{name:new d(t).name,path:t,type:"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null}}async copy(e,t){throw new Error("Copy/paste not supported")}async createCheckpoint(e){return{id:"",last_modified:""}}async listCheckpoints(e){return[]}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._fileProviders.forEach((e=>e.provider.dispose())),this._fileProviders.clear(),this._isDisposed=!0,i.Signal.clearData(this))}async get(e,t){let s;if(await this._ready,!this._ydrive.isDir(e))return{name:new d(e).name,path:e,type:"file",writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null};const r=[],n=this._ydrive.get(e);for(const[t,s]of n){const n=null!==s?"directory":"file";r.push({name:t,path:`${e}/${t}`,type:n,writable:!0,created:"",last_modified:"",mimetype:"",content:null,format:null})}return s={name:new d(e).name,path:e,type:"directory",writable:!0,created:"",last_modified:"",mimetype:"",content:r,format:null},s}async save(e,t={}){const s={type:t.type,format:t.format,content:!1};return this.get(e,s)}}class u{constructor(e){this._onCreate=e,this.documentFactories=new Map}registerDocumentFactory(e,t){if(this.documentFactories.has(e))throw new Error(`The content type ${e} already exists`);this.documentFactories.set(e,t)}createNew(e){if("string"==typeof e.format){if(this.documentFactories.has(e.contentType))return this._onCreate(e)}else console.warn(`Only defined format are supported; got ${e.format}.`)}}}}]);