{"version":3,"file":"lib_index_js.37736453875fd5a62b3f.js","mappings":"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","sources":["webpack://@jupyter/shared-docprovider-extension/./src/filebrowser.ts","webpack://@jupyter/shared-docprovider-extension/./src/index.ts"],"sourcesContent":["/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { fileIcon, listIcon, refreshIcon } from '@jupyterlab/ui-components';\nimport {\n  ILabShell,\n  IRouter,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ToolbarButton } from '@jupyterlab/apputils';\nimport {\n  IDefaultFileBrowser,\n  IFileBrowserFactory\n} from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\n\nimport { YFile, YNotebook } from '@jupyter/ydoc';\n\n//import { ICollaborativeDrive, IGlobalAwareness } from '@jupyter/docprovider';\nimport { ICollaborativeDrive } from '@jupyter/docprovider';\nimport { SharedDrive } from '@jupyter/shared-docprovider';\n//import { Awareness } from 'y-protocols/awareness';\n\n/**\n * The shared drive provider.\n */\nexport const drive: JupyterFrontEndPlugin<ICollaborativeDrive> = {\n  id: '@jupyter/docprovider-extension:drive',\n  description: 'The default collaborative drive provider',\n  provides: ICollaborativeDrive,\n  requires: [IDefaultFileBrowser],\n  //optional: [IGlobalAwareness, ITranslator],\n  optional: [ITranslator],\n  activate: (\n    app: JupyterFrontEnd,\n    defaultFileBrowser: IDefaultFileBrowser,\n    //globalAwareness: Awareness | null,\n    translator: ITranslator | null\n  ): ICollaborativeDrive => {\n    translator = translator ?? nullTranslator;\n    const trans = translator.load('jupyter-shared-drive');\n    const drive = new SharedDrive(\n      app.serviceManager.user,\n      defaultFileBrowser,\n      trans,\n      //globalAwareness,\n      null,\n      'Shared'\n    );\n    return drive;\n  }\n};\n\n/**\n * Plugin to register the shared model factory for the content type 'file'.\n */\nexport const yfile: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/shared-docprovider-extension:yfile',\n  description:\n    \"Plugin to register the shared model factory for the content type 'file'\",\n  autoStart: true,\n  requires: [ICollaborativeDrive],\n  optional: [],\n  activate: (app: JupyterFrontEnd, drive: ICollaborativeDrive): void => {\n    const yFileFactory = () => {\n      return new YFile();\n    };\n    drive.sharedModelFactory.registerDocumentFactory('file', yFileFactory);\n  }\n};\n\n/**\n * Plugin to register the shared model factory for the content type 'notebook'.\n */\nexport const ynotebook: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/shared-docprovider-extension:ynotebook',\n  description:\n    \"Plugin to register the shared model factory for the content type 'notebook'\",\n  autoStart: true,\n  requires: [ICollaborativeDrive],\n  optional: [ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    drive: ICollaborativeDrive,\n    settingRegistry: ISettingRegistry | null\n  ): void => {\n    let disableDocumentWideUndoRedo = true;\n\n    // Fetch settings if possible.\n    if (settingRegistry) {\n      settingRegistry\n        .load('@jupyterlab/notebook-extension:tracker')\n        .then(settings => {\n          const updateSettings = (settings: ISettingRegistry.ISettings) => {\n            const enableDocWideUndo = settings?.get(\n              'experimentalEnableDocumentWideUndoRedo'\n            ).composite as boolean;\n\n            disableDocumentWideUndoRedo = !enableDocWideUndo ?? true;\n          };\n\n          updateSettings(settings);\n          settings.changed.connect((settings: ISettingRegistry.ISettings) =>\n            updateSettings(settings)\n          );\n        });\n    }\n\n    const yNotebookFactory = () => {\n      return new YNotebook({\n        disableDocumentWideUndoRedo\n      });\n    };\n    drive.sharedModelFactory.registerDocumentFactory(\n      'notebook',\n      yNotebookFactory\n    );\n  }\n};\n\n/**\n * The shared file browser factory provider.\n */\nexport const sharedFileBrowser: JupyterFrontEndPlugin<void> = {\n  id: 'jupyter-shared-drive:sharedFileBrowser',\n  description: 'The shared file browser factory provider',\n  autoStart: true,\n  requires: [ICollaborativeDrive, IFileBrowserFactory],\n  optional: [IRouter, JupyterFrontEnd.ITreeResolver, ILabShell, ITranslator],\n  activate: async (\n    app: JupyterFrontEnd,\n    drive: ICollaborativeDrive,\n    fileBrowserFactory: IFileBrowserFactory,\n    router: IRouter | null,\n    tree: JupyterFrontEnd.ITreeResolver | null,\n    labShell: ILabShell | null,\n    translator: ITranslator | null\n  ): Promise<void> => {\n    const { createFileBrowser } = fileBrowserFactory;\n    translator = translator ?? nullTranslator;\n    const trans = translator.load('jupyter-shared-drive');\n    app.serviceManager.contents.addDrive(drive);\n\n    const widget = createFileBrowser('jp-shared-contents-browser', {\n      driveName: drive.name,\n      // We don't want to restore old state, we don't have a drive handle ready\n      restore: false\n    });\n    widget.title.caption = trans.__('Shared Drive');\n    widget.title.icon = listIcon;\n\n    const importButton = new ToolbarButton({\n      icon: fileIcon,\n      onClick: async () => {\n        const path = prompt('Please enter the path of the file to import:');\n        if (path !== null) {\n          await (drive as SharedDrive).importFile(path);\n        }\n      },\n      tooltip: 'Import File'\n    });\n\n    const refreshButton = new ToolbarButton({\n      icon: refreshIcon,\n      onClick: async () => {\n        widget.model.refresh();\n      },\n      tooltip: 'Refresh File Browser'\n    });\n\n    widget.toolbar.insertItem(0, 'refresh', refreshButton);\n    widget.toolbar.insertItem(1, 'import', importButton);\n\n    app.shell.add(widget, 'left');\n  }\n};\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module shared-drive-extension\n */\n\nimport { JupyterFrontEndPlugin } from '@jupyterlab/application';\n\nimport { drive, yfile, ynotebook, sharedFileBrowser } from './filebrowser';\n\n/**\n * Export the plugins as default.\n */\nconst plugins: JupyterFrontEndPlugin<any>[] = [\n  drive,\n  yfile,\n  ynotebook,\n  sharedFileBrowser\n];\n\nexport default plugins;\n"],"names":[],"sourceRoot":""}